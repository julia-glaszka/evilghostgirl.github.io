{"hash":"c86a88e0ba460d88fca5e11d948b3c832eba091d","data":{"post":{"title":"Prawo Demeter - zasada ograniczenia interakcji","path":"/prawo-demeter-zasada-ograniczenia-interakcji/","slug":"prawo-demeter","datetime":"2020-04-30 15:56:24","content":"<p>Przy projektowaniu obiektowym możemy się zastanowić, w jaki sposób uprościć relacje między naszymi obiektami, tak aby zmiana w jednej klasie nie propagowała konieczności zmian w wielu innych.\nZ pomocą przychodzi nam <a href=\"https://pl.wikipedia.org/wiki/Prawo_Demeter\" title=\"**prawo Demeter,** \" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>prawo Demeter,</strong> </a>które w skrócie ogranicza nas do interakcji jedynie z najbliższymi sąsiednimi obiektami. Dzięki temu, nasz obiekt jest zależny tylko od swoich sąsiadów. Kiedy implementacja sąsiada naszego sąsiada się zmieni - nie interesuje nas to. Jest to tak zwany luźny związek (<em>ang. loose coupling</em>).\nNie łamiemy w ten sposób zasady enkapsulacji obiektu i nie tworzymy dużej ilości powodów, dla których mielibyśmy modyfikować naszą klasę. W ten sposób możemy sprawić, że nasz projekt jest zgodny z zasadami <a href=\"https://pl.wikipedia.org/wiki/SOLID_(programowanie_obiektowe)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SOLID</a>.\nPoniżej, na przykładzie logiki aplikacji quizowej, możemy przeanalizować przypadek <strong>tight coupled</strong> (1) i<strong> loose coupled</strong> (2). </p>\n<pre class=\"shiki\" style=\"background-color: #000c18\"><code><span style=\"color: #223355\">//// przykład tight coupling (1)</span>\n<span style=\"color: #9966B8\">class</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizWhichBreaksLawOfDemeter</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #225588\">private</span><span style=\"color: #6688CC\"> questions</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">Question</span><span style=\"color: #6688CC\">[]</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #223355\">// ...</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #DDBB88\">isAnswerCorrect</span><span style=\"color: #6688CC\">(</span><span style=\"color: #2277FF\">question</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">Question</span><span style=\"color: #6688CC\">) {</span>\n<span style=\"color: #6688CC\">     </span><span style=\"color: #223355\">// poniżej łamiemy Prawo Demeter</span>\n<span style=\"color: #6688CC\">     </span><span style=\"color: #223355\">// wnikając w implementację answer</span>\n<span style=\"color: #6688CC\">      </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> question.</span><span style=\"color: #DDBB88\">getAnswer</span><span style=\"color: #6688CC\">().</span><span style=\"color: #DDBB88\">getId</span><span style=\"color: #6688CC\">() </span><span style=\"color: #225588\">==</span><span style=\"color: #6688CC\"> </span>\n<span style=\"color: #6688CC\">      question.</span><span style=\"color: #DDBB88\">getUserAnswer</span><span style=\"color: #6688CC\">().</span><span style=\"color: #DDBB88\">getId</span><span style=\"color: #6688CC\">()</span>\n<span style=\"color: #6688CC\">    } </span>\n<span style=\"color: #6688CC\">  </span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #DDBB88\">countCorrectAnswers</span><span style=\"color: #6688CC\">()</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #9966B8\">number</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">      </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> this.questions</span>\n<span style=\"color: #6688CC\">        .</span><span style=\"color: #DDBB88\">filter</span><span style=\"color: #6688CC\">(</span><span style=\"color: #2277FF\">q</span><span style=\"color: #6688CC\"> </span><span style=\"color: #9966B8\">=&gt;</span><span style=\"color: #6688CC\"> this.</span><span style=\"color: #DDBB88\">isAnswerCorrect</span><span style=\"color: #6688CC\">(q))</span>\n<span style=\"color: #6688CC\">        .length</span>\n<span style=\"color: #6688CC\">    }</span>\n<span style=\"color: #6688CC\">  } </span>\n\n<span style=\"color: #223355\">// anemiczna klasa question, nic prócz getterów i setterów</span>\n<span style=\"color: #6688CC\"> </span><span style=\"color: #9966B8\">class</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">Question</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #225588\">private</span><span style=\"color: #6688CC\"> answer</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #225588\">private</span><span style=\"color: #6688CC\"> userAnswer</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #223355\">// ...</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #DDBB88\">getUserAnswer</span><span style=\"color: #6688CC\">()</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">        </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> this.userAnswer</span>\n<span style=\"color: #6688CC\">    }</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #DDBB88\">getAnswer</span><span style=\"color: #6688CC\">()</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">        </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> this.answer</span>\n<span style=\"color: #6688CC\">    }</span>\n<span style=\"color: #6688CC\">  } </span></code></pre>\n<p>W powyższym przykładzie z poziomu quizu dostajemy się do wnętrza answer, który nie jest naszym bezpośrednim sąsiadem (quiz &#x3C;-> question &#x3C;-> answer). Metoda <code>isAnswerCorrect()</code> wywołuje łańcuch <code>question.getUserAnswer().getId()</code>, dostając się głęboko do struktury, której szczegółów implementacyjnych nie powinniśmy znać. Łamiemy Prawo Demeter. </p>\n<p>Zastanówmy się, jak możemy rozwiązać ten problem. Musimy ograniczyć splątanie naszych klas i ich wspólną zależność od siebie.\nPoniżej przykład, który jest nieco lepszy. Metoda <code>isAnswerCorrect()</code> została przeniesiona z klasy Quiz, do klasy Question. Manipuluje ona już swoimi własnymi sąsiadami, wystawiając Quizowi tylko metodę do sprawdzenia ( <code>isAnswerCorrect()</code> ).</p>\n<pre class=\"shiki\" style=\"background-color: #000c18\"><code><span style=\"color: #223355\">// przykład loose coupling (2)</span>\n<span style=\"color: #9966B8\">class</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizLooseCoupled</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">    questions</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">Question</span><span style=\"color: #6688CC\">[]</span>\n<span style=\"color: #6688CC\">\t</span><span style=\"color: #223355\">// nie interesuje nas jak jest sprawdzana odpowiedź</span>\n<span style=\"color: #6688CC\">\t</span><span style=\"color: #223355\">// po prostu wywołujemy metodę naszego sąsiedniego obiektu</span>\n<span style=\"color: #6688CC\">     </span><span style=\"color: #DDBB88\">countCorrectAnswers</span><span style=\"color: #6688CC\">()</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #9966B8\">number</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">      </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> this.questions</span>\n<span style=\"color: #6688CC\">        .</span><span style=\"color: #DDBB88\">filter</span><span style=\"color: #6688CC\">(</span><span style=\"color: #2277FF\">q</span><span style=\"color: #6688CC\"> </span><span style=\"color: #9966B8\">=&gt;</span><span style=\"color: #6688CC\"> q.</span><span style=\"color: #DDBB88\">isAnswerCorrect</span><span style=\"color: #6688CC\">())</span>\n<span style=\"color: #6688CC\">        .length</span>\n<span style=\"color: #6688CC\">    }</span>\n<span style=\"color: #6688CC\">  }</span>\n\n<span style=\"color: #6688CC\">  </span><span style=\"color: #9966B8\">class</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">Question</span><span style=\"color: #6688CC\"> {</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #223355\">// ...</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #225588\">private</span><span style=\"color: #6688CC\"> answer</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #225588\">private</span><span style=\"color: #6688CC\"> userAnswer</span><span style=\"color: #225588\">:</span><span style=\"color: #6688CC\"> </span><span style=\"color: #FFEEBB\">QuizOption</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #223355\">// tutaj przeniesiona jest odpowiedzialność funkcji</span>\n<span style=\"color: #6688CC\">    </span><span style=\"color: #DDBB88\">isAnswerCorrect</span><span style=\"color: #6688CC\">() {</span>\n<span style=\"color: #6688CC\">      </span><span style=\"color: #225588\">return</span><span style=\"color: #6688CC\"> this.answer.</span><span style=\"color: #DDBB88\">getId</span><span style=\"color: #6688CC\">() </span><span style=\"color: #225588\">===</span><span style=\"color: #6688CC\"> this.userAnswer.</span><span style=\"color: #DDBB88\">getId</span><span style=\"color: #6688CC\">()</span>\n<span style=\"color: #6688CC\">    } </span>\n<span style=\"color: #6688CC\">  } </span></code></pre>\n<p>Podany przykład jest prosty. Popełnienie błędu z pierwszej sekcji nie jest fatalne w skutkach, refaktoryzacja zajmie pół minuty. W przypadku większych aplikacji z wieloma tight coupled obiektami może powstać problem, który poskutkuje efektem domina - naprawiając jeden obiekt, musimy naprawić 2,3,4 następnych…</p>\n<p>Na ile posiadamy czasu, warto zastanowić się nad rozluznieniem wiezi naszych obiektów póki nie ma dramatu - nie żyjemy w starożytnej Grecji, ale Prawo Demeter warto znać :) </p>\n<p>Całość kodu można znaleźć na moim <a href=\"https://github.com/julia-glaszka/law-of-demeter\" title=\"githubie\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">githubie</a>.</p>\n","description":"Krótka notatka o prawie demeter z przykładami","timeToRead":2,"cover":"/images/posts/prawo-demeter/cover.jpg","author":{"id":"Julia Glaszka","title":"Julia Glaszka"},"tags":[{"id":"SOLID","title":"SOLID","path":"/tag/SOLID/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"TypeScript","title":"TypeScript","path":"/tag/TypeScript/"},{"id":"programowanie","title":"programowanie","path":"/tag/programowanie/"}]},"recommendedposts":{"edges":[{"node":{"id":"5c6912511fbf00580160f309c8bff279","title":"Obiektywizm a rozwój w IT","path":"/obiektywizm-a-rozwoj-w-it/","cover":"/images/posts/obiektywizm/atlas.jpg"}},{"node":{"id":"507900b37c02db543d8fa26f4705fb1e","title":"Wykorzystaj cały potencjał klastra MongoDB z pomocą preferencji odczytu","path":"/wykorzystaj-caly-potencjal-klastra-mongo-db-z-pomoca-preferencji-odczytu/","cover":"/images/posts/mongodb-read-preferences/route.jpg"}},{"node":{"id":"c854d4a554f3e6aa74a421fac8beb243","title":"Konfiguracja ClusterSettings w MongoDB Java Driver","path":"/konfiguracja-cluster-settings-w-mongo-db-java-driver/","cover":"/images/posts/cluster-settings-mongo/local-threshold.png"}}]}},"context":{}}