{"hash":"d7854f84d1ae0307c2d5336bcf545aa865f01b3e","data":{"posts":{"totalCount":12,"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"id":"5c6912511fbf00580160f309c8bff279","title":"Obiektywizm a rozwój w IT","timeToRead":13,"datetime":"2021-12-31 18:37:24","content":"<p>Jednym z ważnych celów w życiu człowieka jest <strong>satysfakcja z efektów produktywnej pracy</strong> - zaplanowanej i zorganizowanej przez racjonalny umysł. Kreatywność i uzyskiwanie korzystnych rezultatów z podjętych przedsięwzięć umożliwia człowiekowi przeżycie w świecie pełnym zmian, niedoborów zasobów i niebezpieczeństw. <strong>Inteligentne planowanie</strong> pozwala na unikanie cierpienia i radzenie sobie z spotykanymi trudnościami. Esencją zadowolenia z własnej pracy jest właśnie <strong>poczucie skuteczności i przydatności</strong>. </p>\n<p>Proces tworzenia w głównej mierze jest uzależniony od przyjętej filozofii i zaangażowania danej osoby - człowiek zmotywowany z pozytywną wizją świata osiągnie zdecydowanie lepsze efekty niż osoba bez poczucia sensu, wiary w siebie i postrzegająca świat jako za trudny do zrozumienia chaos. Jedną z filozofii, które mogą pomóc wytyczyć ścieżkę podejścia do życia i pracy, może być <em>obiektywizm</em> - czyli tak zwana <strong>filozofia życia na ziemii</strong>.</p>\n<p>Ten post będzie trochę mniej techniczny, wręcz zero-techniczny - choć jako całość może trochę zmienić podejście do mniej miękkich spraw. Myślę, że może pozwolić zauważyć, że u źródła spraw czysto technicznych często leży podłoże ludzkie, miękkie - bo to my, inżynierzy, tworzymy technologię. </p>\n<p>Postaram się przybliżyć, czym jest obiektywizm, jakie cechy promuje i jak mogą się przydać one w pracy w IT. Zwrócę też uwagę na pułapki myślenia, w które można wpaść, zbyt mocno przywiązując się do dosłownego znaczenia wzorców osobowych w powieściach Ayn Rand - twórczyni tej filozofii.</p>\n<p>Na wstępie chciałabym zaznaczyć, że nie posiadam zaawansowanej wiedzy naukowej na temat filozofii ani psychologii, podejmuję temat jako <strong>laik na podstawie własnych przemyśleń i doświadczeń</strong>. Osobiście sama lubię analizować w jaki sposób działają ludzie - w jakie wzorce myślowe wpadli lub jakie archetypy mogli przyjąć. Myślę, że pomimo mojej amatorskiej analizy, nikogo nie zniechęcę do tematu, który może być ciekawy. Z góry zachęcam do pogłębiania wiedzy na ten temat.</p>\n<h3 id=\"skąd-pomysł-na-post\">Skąd pomysł na post?</h3>\n<p>Są w życiu <em>tacy</em> pisarze, których się nie zapomina. Pod koniec czytania książki wywołują ten moment, gdy nabiera się głębszy oddech i jedynie co pojawia się w głowie to uczucie podziwu, szacunku, zrozumienia. Przez następne dni pozostaje myślenie o tym, co się przeczytało, w głowie nawracają dogłębne analizy w losowych sytuacjach i dochodzenie do coraz głębszych przemyśleń. </p>\n<p>Pojawia się <em>nowy wymiar</em>, na który wcześniej nie zwracało się uwagi, a sprawiający, że w życiu dostrzega się więcej. Tak właśnie miałam po <em>Atlasie Zbuntowanym</em> i później <em>Cnocie Egoizmu</em>. Te dwie książki i cała wyłożona w nich wykładnia <em>obiektywizmu i racjonalnego egoizmu</em> zmieniły moje życie na lepsze. Poukładały wiele spraw, które wcześniej nie były dla mnie intuicyjne czy jednoznaczne, szczególnie w kwestii <strong>planowania, wartościowania i dokonywania wyborów</strong>. Poczułam też wieloletni, głęboki przypływ <strong>inspiracji i motywacji do poznawania świata i czynienia go lepszym</strong>. Można powiedzieć, że obiektywizm przetarł mi szlaki na <em>przyszłość</em>, zrozumiałam czym dla mnie jest <em>sens życia</em> i finalnie umiem sprecyzować, <em>do czego dążę</em>. </p>\n<p>Dzięki wejściu w głębię obiektywizmu, moje życie zaczęło działać jak na <em>autopilocie</em>. Często naturalnie wartościuję sprawy i rzadko mam różnego rodzaju <em>dysonanse</em>. Filozofia Rand pozwoliła mi zrozumieć, że w hierarchii poznawczej <strong>rozum</strong> zawsze powinien stać <strong>powyżej emocjami</strong>. </p>\n<blockquote>\n<p>“Jeśli część pani niepewności stanowi konflikt pomiędzy sercem a umysłem, proszę się kierować umysłem.” <span> John Galt, \"Atlas Zbuntowany\" Ayn Rand </span></p>\n</blockquote>\n<p>Nie chodzi natomiast o całkowitą negację emocji, tylko <strong>podporządkowanie</strong> ich rozumowi. Wiele emocji jest integralnych z rozumem i tym, kim jesteśmy. Niekiedy po prostu pojawia się nieoczekiwany <strong>szum emocjonalny</strong>, którego genezę trzeba zrozumieć i wykryć.</p>\n<p>Zrozumienie dlaczego mózg reaguje na dane zdarzenie w konkretny sposób. Poznanie źródła tych emocji - skąd się wywodzą, jakie mają podłoże. Ułatwia to pracę, współpracę i zrozumienie innych osób, rozwijanie siebie i podejmowanie trudnych decyzji. </p>\n<p><img src=\"/images/posts/obiektywizm/ayn-rand.jpg\"></p>\n<div align=\"center\"> Ayn Rand </div>\n<h3 id=\"parę-słów-o-ayn-rand\">Parę słów o Ayn Rand</h3>\n<p>Twórczynią wymienionych wyżej dwóch książek była (tak, to kobieta) <strong>Ayn Rand</strong>, znakomita rosyjska pisarka i filozof. Okres jej twórczości i aktywności w mediach przypadał na XX wiek, dokładniej od 1932 do jej śmierci w 1982. </p>\n<p>W młodości interesowała się filozofią, w szczególnosci inspirowała ją <em>filozofia arystotelejska</em>, której elementy można dostrzec w jej dalszej twórczości. Okres dorastania autorki przypadł na czasy <strong>rewolucji komunistycznej</strong>. Sama jej rodzina również padła ofiarą rewolucjonistów - ich dorobek życia został skonfiskowany przez bolszewików. Te <strong>straszne doświadczenia</strong> pozwoliły jej dostrzec, jak ówczesny ustrój krzywdził i niszczył życia ludności Rosji. Zdecydowanie wpłynęło to na jej <em>awersję</em> do kolektywizmu.</p>\n<p>Po emigracji do USA jej kariera rozkwitła i mogła skupić się na swobodnym pisaniu. W jej dorobku są głównie powieści, ale również zajmowała się pisaniem scenariuszy i esejów. Pomimo rozległej wiedzy na temat filozofii, nie potrafiła się z żadną w pełni utożsamić, dlatego zaczęła tworzyć <strong>swój własny system filozoficzno-moralny</strong>, czyli obiektywizm. Dużą inspiracją był też jej mąż, Frank O'Connor, który wpasowywał się w jej etos moralny i jak sama twierdziła, mógł być inspiracją dla niektórych postaci jej powieści: </p>\n<blockquote>\n<p>“Every hero was modeled after him,” Miss Rand said. “I sometimes took an entire monologue from him and slipped it into my book. When 1 couldn't think of a title for one of my novels, he did. He told the whole story in two words.” Mr. D'Connor's two‐word title was “Atlas Shrugged.” <span>Ayn Rand, NY. Times, “Charles Francis O'Connor, Artist, Husband of the Writer Ayn Rand”, 1979</span> </p>\n</blockquote>\n<h3 id=\"czym-jest-obiektywizm\">Czym jest obiektywizm?</h3>\n<p>Jest to <strong>system filozoficzny</strong>, oparty na <strong>indywidualizmie</strong>, <strong>racjonalnym egoizmie</strong> oraz <strong>wolności jednostki</strong>. Według Rand, świat jako aktualna rzeczywistość, jest niezależny od świadomości, poglądów i emocji człowieka. Prawda jest jedyna i absolutna, <em>“dwa plus dwa równa się cztery.“</em>. <strong>Różnice percepcyjne</strong> nie zmieniają istoty rzeczy. Dany materiał w danym momencie zawsze jest tym samym materiałem, niezależnie od poglądów obserwatora. Człowiek może wydawać jedynie racjonalne osądy, w oparciu o prawa natury, wiedzę i naukę, a tym samym dążyć do prawdy.</p>\n<p>Samą wiedzę człowiek powinien pozyskiwać zarówno przez <strong>empiryzm</strong>, jak i <strong>racjonalizm</strong> - <em>nie muszą</em> one między sobą <em>kolidować</em>. Zdobywając doświadczenie empiryczne można dojść do nowych racjonalnych wniosków i odkryć.</p>\n<p>Choć ten system z pozoru brzmi bardzo chłodno, nie unika on <strong>kwestii emocji i potrzeb człowieka</strong>. Trzeba jednak przyznać, że ma trochę inne podejście niż filozofie emocjonalno-centryczne, w których emocje determinują kodeks etyczny. W obiektywizmie etyka jest pochodną <strong>praw naturalnych człowieka</strong>, a jego celem jest <strong>osobiste szczęście</strong>.</p>\n<p>Drogą do tego stanu jest zaspokojenie <strong>racjonalnych potrzeb</strong> - od tych <em>najniższych</em> (fizycznych, takich jak sprawy przeżycia), do tych <em>wyższych</em> - romantyczna miłość, realizacja w pracy i pasjach, zachwyt nad sztuką. </p>\n<p>Należy zaznaczyć, że samo dążenie do szczęścia nie może być irracjonalnymi zachciankami, nie może też <strong>nikogo krzywdzić ani odbierać mu wolności</strong>. </p>\n<h3 id=\"philosophy-for-living-on-earth\">Philosophy for Living on Earth</h3>\n<p>Teraz już można zrozumieć, dlatego obiektywizm uzyskał określenie <em>filozofii życia na ziemii</em>. Wynika to z silnego ugruntowania życia człowieka do życia doczesnego. <em>Życia dla teraźniejszości i przyszłości, na świecie jaki jest i będzie.</em> I tak, tutaj nastaje najbardziej główny temat tego artykułu czyli - <em>czego można się nauczyć z filozofii obiektywistycznej? Na jakie sfery życia może wpłynąć?</em></p>\n<h3 id=\"satysfakcja-z-pracy-i-wyznaczona-wizja-na-przyszłość\">Satysfakcja z pracy i wyznaczona wizja na przyszłość</h3>\n<p>Obiektywizm przykłada dużą wagę do kwestii <strong>pracy</strong>, jako jednego z <strong>celów</strong> w życiu. Praca jest szczególnym sposobem dążenia do <strong>szczęścia</strong>, ponieważ widok jej efektów powoduje <strong>poczucie dumy, skuteczności i przydatności</strong>. W niektórych przypadkach może wpłynąć na rozwój nauki i przyszłych pokoleń, co wzmaga to poczucie. Osoby, z którymi współpracuje się nad dziełem w imię wspólnego celu, to też często pasjonaci. Takie otoczenie <strong>synergicznie</strong> dostarcza większej motywacji, ciekawych rozmów i miłych wspomnień.</p>\n<p><img src=\"/images/posts/obiektywizm/building.jpg\"></p>\n<blockquote>\n<p>Największe znaczenie ma tutaj praca, w niej bowiem kształtuje się fundamentalne\npoczucie kontroli nad egzystencją — poczucie skuteczności — które umożliwia\ndopiero radość z innych wartości. Człowiek, którego życiu brak ukierunkowania czy\nzadania, człowiek, któremu brak twórczego celu, z konieczności czuje się bezradny i\nbezsilny, a więc i niezdolny do kształtowania życia. Niepodobna zaś, by taki\nczłowiek cieszył się życiem. <span> Nathaniel Branden, Cnota Egoizmu </span></p>\n</blockquote>\n<p>Koncept <strong>Piramidy Maslowa</strong> głosi, że potrzeby człowieka są nieskończone i kiedy jedna zostaje zaspokojona, to pojawia się następna. Tworzy to rytm życia, naturalną siłę, która napędza człowieka i nie pozwala na stagnację. Dzięki temu osoba może pokochać swoje życie, co w połączeniu z szacunkiem do siebie i innych ludzi powoduje poczucie pełnej satysfakcji z niego.</p>\n<blockquote>\n<p>Jedną z oznak szacunku, jaki żywi do siebie człowiek, który uważa świat za otwarty\ndla jego wysiłków, jest głęboka przyjemność z twórczej pracy umysłu. Radość życia\njest nieustannie wspomagana przez nieustający zapał do rozszerzania wiedzy i\numiejętności, zapał do myślenia, stawiania przed sobą nowych zadań, zmagania się\nz przeszkodami i pokonywania ich. W ten sposób rodzi się duma ze stale\nwzrastającej skuteczności. <span> Nathaniel Branden, Cnota Egoizmu </span></p>\n</blockquote>\n<p><strong>Środowisko w pracy w IT</strong> ma szczególnie <strong>dużo nowych wyzwań</strong>. Często pojawiają się nowe problemy, z którymi trzeba sobie radzić i <em>planować rozwiązania</em>. Codziennie spotykamy <em>nowoczesne technologie</em>, które fascynują i mogą zmienić świat branży technologicznej na lepsze. To świetna dziedzina dla osób, które <strong>kochają się rozwijać i czują z tego dużą satysfakcję</strong>. </p>\n<h3 id=\"epistemologia---poszukiwanie-przyczyn\">Epistemologia - poszukiwanie przyczyn</h3>\n<p>Krótka definicja <em>epistemologii</em> (z wikipedii 💖 ):</p>\n<blockquote>\n<p>“Dział filozofii, zajmujący się relacjami między poznawaniem, poznaniem a rzeczywistością. Epistemologia rozważa naturę takich pojęć jak: prawda, przekonanie, sąd, spostrzeganie, wiedza czy uzasadnienie. \"</p>\n</blockquote>\n<p>Według <strong>racjonalnej epistemologii</strong>, centralnym <strong>narzędziem poznania</strong> człowieka jest <strong>rozum</strong>, a świat jest <strong>obiektywny</strong> - niezmienny od percepcji. Z tego powodu pytanie <em>“dlaczego?”</em> powinno być stawiane za każdym razem, gdy jest potrzeba poznania <em>sedna</em> wszystkich problemów i dojścia do <em>prawdy absolutnej</em>.</p>\n<p>Cała technologia składa się z fizyki, matematyki i logiki, a te nauki są obliczalne, mierzalne, deterministyczne (mam na myśli nauki w wariancie klasycznym). Każdy układ jest zaprogramowany z góry, na podstawie <em>danych wejściowych</em> i konkretnego <em>stanu</em>, można przewidzieć z dużym prawdopodobieństwem, jaki będzie <em>wynik końcowy</em>. </p>\n<p>Kluczowym momentem w życiu inżyniera jest nabycie świadomości, że cały system informatyczny to tylko <strong>wielka mapa</strong>, a nie <em>“czarna skrzynka”</em>. Każde zdarzenie da się <em>zreprodukować</em> - do tego potrzebna jest umiejętność szukania wiedzy i debugowania. Bardzo ważne są też toole do <em>observability</em> (metryki, logi, profilery), szczególnie w zaawansowanych problemach technicznych - bez nich można tylko <em>gdybać</em>, co się wydarzyło. Z tak <strong>otwartym umysłem i przydatnymi narzędziami</strong> dużo łatwiej przejść do poszukiwania <strong>przyczyn i rozwiązań</strong>.</p>\n<h3 id=\"dążenie-do-prawdy-i-pewność-siebie\">Dążenie do prawdy i pewność siebie</h3>\n<p>Tu zdecydowanie można skłonić się ku sprawie <strong>projektowania technicznego i dyskusji</strong>. Mogą zdarzyć się sytuacje, że dana osoba może wykorzystać swoje <strong>wyższe stanowisko</strong> (np. urzędnik w instytucji państwowej) do wywarcia nacisku i narzucenia swojego zdania, mimo że mamy względem tego uzasadnione wątpliwości. Zadaniem obiektywisty jest <strong>zachowanie pewności siebie</strong> pomimo nacisku i podejmowanie prób dążenia do prawdy: </p>\n<ul>\n<li>toczenie <strong>merytorycznej dyskusji</strong> opartej na <strong>szacunku</strong>, </li>\n<li><strong>zadawanie</strong> odpowiednich <strong>pytań</strong>, </li>\n<li>próba uświadomienia o <strong>skutkach</strong> </li>\n<li>wspólne wypracowanie <strong>najlepszych rozwiązań</strong></li>\n</ul>\n<p>Dążenie do prawdy eksponuje zwracającego uwagę na <em>krytykę</em> i powoduje <em>ryzyko ponoszenia konsekwencji</em>, dlatego konieczne jest wyważenie <em>stosunku korzyści do potencjalnych strat</em>. Czasem nie warto. Ale czasem tak!</p>\n<p><img src=\"/images/posts/obiektywizm/mountains.jpg\"></p>\n<h3 id=\"racjonalny-egoizm\">Racjonalny egoizm</h3>\n<p><em>Ważna notatka:\nChciałabym z góry uprzedzić złe skojarzenia, w tym kontekście egoizm to pogląd, że każdy powinien realizować swoje potrzeby samodzielnie, zgodnie z jego hierarchią wartości i kodeksem moralnym opartym na braku agresji. Racjonalny egoizm koliduje z potoczną definicją egoizmu - według której egoista krzywdzi ludzi, tutaj nie ma to miejsca. Racjonalny egoista MUSI uwzględniać prawa naturalne innych i umowy, jakie zawarł. </em></p>\n<p>Ayn Rand w swojej filozofii stworzyła nowy termin - <strong>racjonalny egoizm</strong>. To system etyczny opierający się na rozumie i racjonalnym dążeniu do własnego dobra. Ważnym kryterium decyzyjnym jest <strong>racjonalność</strong> i <strong>hierarchia wartości</strong> danej osoby, według racjonalnego egoizmu <em>nie należy poświęcać wyższej wartości w imię wartości niższej lub jej braku</em>. Jeśli coś nie jest w <strong>interesie</strong> egoisty, to poświęcenie się powinno zostać <strong>uzasadnione</strong>, na przykład na podstawie <strong>cnót danej osoby</strong>.</p>\n<blockquote>\n<p>“Konflikt pomiędzy egoizmem i altruizmem polega na odmiennych odpowiedziach na\nto pytanie. Egoizm utrzymuje, że człowiek jest celem samym w sobie, altruizm — że\nczłowiek jest narzędziem do realizacji celów innych ludzi. Egoizm jest zdania, iż\nmoralnie wartościowe jest to, aby z poczynań korzystała osoba, która je podejmuje,\naltruizm upatruje moralnej wartości w tym, iż działanie jest korzystne dla kogoś\ninnego niż działająca osoba. “ - <span> Nathaniel Branden, Cnota Egoizmu </span></p>\n</blockquote>\n<p>Racjonalny egoizm może być bardzo przydatny przy rzeczach typu <strong>negocjowanie własnych warunków</strong> w pracy - na przykład adekwatna pensja, nie zgadzanie się na poświęcanie zdrowia kosztem pracy. To też dbanie o siebie i o swój <strong>work-life balance</strong>.</p>\n<p>To może być umiejętność <strong>negocjowania warunków biznesowych</strong> lub <strong>odrzucania zbyt dużej ilości zadań</strong>, które nie należą do domeny i interesu zespołu. Racjonalny egoista powinien umieć <strong>wartościować</strong>, które zadania są rzeczywiście <em>ważne</em>, a na które jest wywierana bezpodstawna presja. Przykładowo (<em>to wymyślony przykład!!</em>), odrzucanie tworzenia potencjalnego długu technicznego w związku z nieprzemyślaną decyzją UX designera. Przed oczami racjonalnego egoisty może się pojawić wizja marnowania dużej ilości czasu developera i stresowania swojego zespołu w imię nieprzemyślanej decyzji.</p>\n<p>Egoizm <strong>nie musi być samolubny</strong>, jeśli dane osoby są dla kogoś ważne, to może je cenić mocniej niż siebie - np. swoje dziecko - i byłby zdolny poświęcić się w jego imieniu. Można zauważyć, że ktoś w pracy ma zbyt dużo zadań i zaproponować pomoc w ich realizacji. Egoizm <strong>nie wyklucza ludzkiego podejścia</strong> i <strong>dobroczynności</strong> względem innych - ważne tutaj jest <strong>wartościowanie</strong>.</p>\n<h3 id=\"pułapki-obiektywizmu\">Pułapki “obiektywizmu”</h3>\n<p>Przez błędne zrozumienie niektórych koncepcji obiektywizmu można wpaść w kilka <strong>pułapek</strong> spowodowanych <strong>niecałkowitym zrozumieniem</strong> tej filozofii.</p>\n<h3 id=\"pracoholizm--wypalenie-zawodowe\">Pracoholizm / Wypalenie zawodowe</h3>\n<p>Główni bohaterowie powieści Rand często byli w pełni oddani pracy. <strong>Dagny Taggart</strong> z Atlasu Zbuntowanego, <strong>pracująca do wyczerpania sił</strong> jako menadżerka kolei, które były na skraju upadku. <strong>Howard Roark</strong> z książki Źródło, <strong>żyjący tylko dla realizacji artystycznych wizji</strong> swoich budynków. </p>\n<p>Przez większość fabuły byli oni <strong>pracoholikami</strong>, którzy oparli całkowicie <strong>swoją wartość o pracę</strong>. Przeczytanie którejś z książek w połowie albo po prostu zbyt <strong>dosłowne</strong> rozumienie zachowania tych postaci, może wywołać iluzję, że są wzorcami do naśladowania. Przyjęcie i naśladowanie takiego wzorca w połączeniu z upartą osobowością może prowadzić do <strong>zbyt wysokich oczekiwań wobec siebie</strong> i powolnego <strong>wypalenia zawodowego</strong>.</p>\n<h3 id=\"depresja\">Depresja</h3>\n<p>Obiektywista z <strong>złudnym poczuciem</strong>, że może <strong>zmienić</strong> dosłownie <strong>całe zło na świecie</strong> - a jednocześnie zawsze trafiający na <strong>mur</strong>, w pewnym momencie się <em>złamie</em>.\nNiektórych rzeczy po prostu <em>nie da się zmienić</em>. Pewnym rzeczom nie da się <em>zapobiec</em>. Nawet będąc najlepszym, <em>nie zmienisz przeszłości</em>. <strong>Overthinking</strong>. </p>\n<p><strong>Próba walczenia z wiatrakami</strong> <strong>kończąca się</strong> zawsze <strong>niepowodzeniem</strong> i <strong>poczucie</strong> bycia w <strong>klatce</strong> nieuchronnie zbliża umysł do popadania w <strong>depresję</strong>. </p>\n<p><img src=\"/images/posts/obiektywizm/sadness.jpg\"></p>\n<h3 id=\"nie-każdy-jest-taki-jak-ty\">Nie każdy jest taki jak Ty</h3>\n<p>Świat racjonalnego egoisty jest prosty - dla niego jest oczywiste, że wybierze lepszą rzecz niż gorszą. Będzie cenił <strong>bolesną szczerość</strong> ponad <strong>słodką sztucznością</strong>. Naturalnie będzie szukał osób z <strong>wyższymi cnotami</strong>. Upatruje w swoich przyjaciołach autorytetu, wzorców. </p>\n<p>Problem jest w tym, że część ludzi zupełnie nie zwraca uwagi na te kryteria i bazuje tylko na emocjach / wygodzie (?). W każdym razie, można próbować być najlepszym, stawać na głowie, rozwijać się - a osoba, na której Ci zależy <em>i tak nie zwróci uwagi</em>.</p>\n<h3 id=\"wyzwolenie\">Wyzwolenie</h3>\n<p>Z wyżej wymienionymi pułapkami można <strong>walczyć</strong>. Dobrym lekarstwem na te rzeczy to <strong>lekkie obniżenie oczekiwań</strong> i nabranie <strong>pokory</strong>. <strong>Nie idealizowanie</strong> siebie jako centrum wszechświata. Zrozumienie, że świat nie oczekuje bycia herosem, a ciało i mózg nie są ze stali. Zrozumienie, że jest się <em>człowiekiem</em> i ma się <strong>ludzkie ograniczenia</strong>.\nTo też <strong>cnoty</strong>, których trzeba się nauczyć.</p>\n<h3 id=\"podsumowanie\">Podsumowanie</h3>\n<p>Melancholijny koniec, ale nie chciałam <strong>przekoloryzować i idealizować</strong> każdego aspektu obiektywizmu. To nie jest cukierkowa filozofia, gdzie są odgórne założenia, że wszystko będzie zawsze dobrze / albo, że będzie zawsze źle. Obiektywizm to coś <strong>pomiędzy</strong>, <em>szarość</em>. <em>Nie szarość z czerni i bieli - a zmieszania wielu kolorów</em>. Ot taka rzeczywistość. </p>\n<p><strong>Szczęście, rozum i sens</strong> oddają <strong>istotę filozofii życia na ziemi</strong> – życie, z <strong>otwartym umysłem, uzyskiwaniem osiągnięć i przyjemnościami</strong>. <em>Branie szczęścia garściami</em> z aktualnych chwil, <em>stanie z uniesioną głową skierowaną w kierunku przyszłości</em>. W rozwoju w IT obiektywizm może pomóc w <strong>doskonaleniu siebie i rozwiązywaniu problemów</strong>. </p>\n<p><strong> Życzę każdemu, by mógł poczuć tę radość związaną z odkryciem swojej drogi i dużo sił, które pozwolą na realizację swoich celów. 🔥 </strong></p>\n<p>Szczęśliwego Nowego Roku w\n2022</p>\n","excerpt":"Jednym z ważnych celów w życiu człowieka jest satysfakcja z efektów produktywnej pracy - zaplanowanej i zorganizowanej przez racjonalny umysł. Kreatywność i uzyskiwanie korzystnych rezultatów z","description":"Czy można spójnie pogodzić filozofię i praktykę techniczną? Jak najbardziej! Postaram się przybliżyć, czym jest obiektywizm, jakie cechy promuje i jak mogą się przydać one w pracy w IT.","path":"/obiektywizm-a-rozwoj-w-it/","cover":"/images/posts/obiektywizm/atlas.jpg","tags":[{"id":"obiektywizm","title":"obiektywizm","path":"/tag/obiektywizm/"},{"id":"soft skills","title":"soft skills","path":"/tag/soft%20skills/"},{"id":"inżynieria","title":"inżynieria","path":"/tag/in%C5%BCynieria/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}},{"node":{"id":"507900b37c02db543d8fa26f4705fb1e","title":"Wykorzystaj cały potencjał klastra MongoDB z pomocą preferencji odczytu","timeToRead":3,"datetime":"2021-11-15 18:37:24","content":"<h1 id=\"\"></h1>\n<p>Typowy produkcyjny klaster jest zbudowany z co najmniej jednego ReplicaSetu. To oznacza, że posiadamy co najmniej jeden węzeł Primary (realizujący zapisy i odczyty) i kilka Secondary (tylko do odczytu). Domyślne ustawienia konfiguracji sterowników kierują ruch wyłącznie do Primary, rezygnując z używania pozostałych hostów. To oznacza, że obciążony jest tylko jeden node, a reszta pozostaje bierna - zasoby pod względem load-balancingu są marnowane. W przypadku awarii Mastera tracimy też możliwość odczytów, które mogłyby być nadal realizowane przez Secondary.</p>\n<p>Zatem w jaki sposób można wymusić kierowanie ruchu do innych hostów niż Primary? Z pomocą przychodzą nam preferencje odczytu - tzw. <code>ReadPreference</code>. Posiada on różne tryby, pozwalające na wybranie algorytmu poszukiwania hosta, do którego wyślemy query.</p>\n<h2 id=\"konfiguracja-preferencji-odczytu-w-driverze\">Konfiguracja preferencji odczytu w driverze</h2>\n<p>Ustawienia <code>ReadPreference</code> można zdefiniować w kilku miejscach:</p>\n<ul>\n<li>na poziomie klastra:</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoClient</span><span style=\"color: #FFFFFF\"> mongoClient </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">MongoClients</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">create(</span><span style=\"color: #569CD6\">MongoClientSettings</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">builder()  </span>\n<span style=\"color: #FFFFFF\">.hosts(listOfHostsUrls)</span>\n<span style=\"color: #FFFFFF\">.readPreference(</span><span style=\"color: #569CD6\">ReadPreference</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">secondary())  </span>\n<span style=\"color: #FFFFFF\">.build());</span></code></pre>\n<ul>\n<li>na poziomie bazy danych</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoDatabase</span><span style=\"color: #FFFFFF\"> database </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> mongoClient</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">getDatabase(</span><span style=\"color: #CE9178\">\"someDatabase\"</span><span style=\"color: #FFFFFF\">)  </span>\n<span style=\"color: #FFFFFF\">.withReadPreference(</span><span style=\"color: #569CD6\">ReadPreference</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">secondary());</span></code></pre>\n<ul>\n<li>na poziomie kolekcji</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoCollection&lt;Document&gt;</span><span style=\"color: #FFFFFF\"> collection </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> database</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">getCollection(</span><span style=\"color: #CE9178\">\"videos\"</span><span style=\"color: #FFFFFF\">)  </span>\n<span style=\"color: #FFFFFF\">.withReadPreference(</span><span style=\"color: #569CD6\">ReadPreference</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">secondary());</span></code></pre>\n<p>Podane ustawienia mogą zmieniać działanie usługi, jeśli na przykład posiada na klastrze kilka różnych baz danych z różnymi kolekcjami. Może być tak, że nie dla wszystkich kolekcji można sobie pozwolić na odczyt z Secondary - np. gdy potrzebujemy wyższy poziom consistency.</p>\n<h2 id=\"tryby-odczytu\">Tryby odczytu</h2>\n<h3 id=\"primary\">primary</h3>\n<p>Domyślny dla wielu driverów. Kieruje ruch wyłącznie do hosta typu Primary, co może być znaczącą barierą w skalowaniu usługi pod kątem odczytów.</p>\n<h3 id=\"primarypreferred\">primaryPreferred</h3>\n<p>W tej preferencji w głównej mierze odczytujemy z hosta Primary, ale w przypadku gdy będzie niedostępny to odczyty zostaną przekierowana do innych replik typu Secondary.</p>\n<h3 id=\"secondary\">secondary</h3>\n<p>Wszystkie odczyty są kierowane do Secondary.</p>\n<h3 id=\"secondarypreferred\">secondaryPreferred</h3>\n<p>W większości przypadków odczytujemy z Secondary, ale przy awarii wszystkich hostów ruch może zostać przekierowany do Primary.</p>\n<h3 id=\"nearest\">nearest</h3>\n<p>Driver selekcjonuje zdrowe hosty z odpowiednio krótkim czasem odpowiedzi, tak by odpowiedziały maksymalnie szybko - np w ramach jednego datacenter. Następnie losowo wybierany jest jeden host, który zrealizuje żądanie. Nie jest uwzględniane czy node jest Primary czy Secondary.</p>\n<h2 id=\"jaki-tryb-odczytu-wybrać\">Jaki tryb odczytu wybrać?</h2>\n<p>W przypadku usługi typu heavy read z eventual consistency najbardziej optymalne będzie odczytywanie z preferencjami: <code>nearest</code>, <code>secondaryPreferred</code> lub <code>secondary</code>. Wybór konkretnej preferencji zależałby w tym przypadku od ilości zapisów oraz posiadanych hostów i zasobów. Jeśli usługa bardzo dużo zapisuje i Primary jest już dostatecznie obciążony, można rozważyć unikanie dociążania Primary poprzez preferencję <code>secondary</code> lub <code>secondaryPreferred</code>.</p>\n<p>Ostateczny wybór między pozostałymi dwoma typami odczytów może rozstrzygnąć to - czy bardziej zależy nam na stabilności odczytów czy zapisów. SecondaryPreferred dostarcza n+1 hostów, natomiast samo secondary tylko n (bo nie uwzględnia Primary).</p>\n<p>W sytuacji niespodziewanie większego ruchu warto mieć więcej dostępnych hostów niż mniej, ale analizując z drugiej strony - ten jeden dodatkowy host to Primary, jeśli zostanie obciążony to doprowadzi to również do niestabilności zapisów. Jeśli usługa nie posiada mechanizmów ponowień takich jak klienci z ponowieniami lub message queue, to dane mogą zostać niezapisane, co skłaniałoby do użycia preferencji secondary - wtedy awaria dotyczyłaby tylko odczytów.</p>\n<h2 id=\"po-wdrożeniu\">Po wdrożeniu</h2>\n<p>Po wdrożeniu nowego typu preferencji warto mieć wgląd w metryki:</p>\n<ul>\n<li>czasów odpowiedzi usługi</li>\n<li>czasów odpowiedzi bazy danych do usługi</li>\n<li>load, zajętość ramu, ilość rps do kolekcji, obciążenie sieciowe klastra mongo</li>\n</ul>\n<h2 id=\"podsumowanie\">Podsumowanie</h2>\n<p>Jak widać, każde takie ustawienie trzeba samodzielnie przeanalizować, uwzględniając swoje własne wymagania względem stabilności. Wybranie konkretnej preferencji odczytu może mieć dalekosiężne skutki, dlatego przed wyborem zawsze warto się dłużej zastanowić i przeanalizować słabe punkty konkretnego rozwiązania. Polecam również zapoznać się z <a href=\"https://docs.mongodb.com/manual/core/read-preference/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">oficjalną dokumentacją</a>.</p>\n","excerpt":" Typowy produkcyjny klaster jest zbudowany z co najmniej jednego ReplicaSetu. To oznacza, że posiadamy co najmniej jeden węzeł Primary (realizujący zapisy i odczyty) i kilka Secondary (tylko do","description":"MongoDB dostarcza wiele mechanizmów sterowania consistency. Jak uzyskać większą przepustowość odczytu kosztem spójności danych? O tym w dzisiejszym poście!","path":"/wykorzystaj-caly-potencjal-klastra-mongo-db-z-pomoca-preferencji-odczytu/","cover":"/images/posts/mongodb-read-preferences/route.jpg","tags":[{"id":"mongodb","title":"mongodb","path":"/tag/mongodb/"},{"id":"java","title":"java","path":"/tag/java/"},{"id":"database","title":"database","path":"/tag/database/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}},{"node":{"id":"c854d4a554f3e6aa74a421fac8beb243","title":"Konfiguracja ClusterSettings w MongoDB Java Driver","timeToRead":4,"datetime":"2021-10-07 20:22:24","content":"<p>Powszechnie wykorzystywane klienty do łączenia się z bazą danych dostarczają wiele funkcjonalności i możliwości konfiguracji, które można przeoczyć - a są bardzo przydatne i mogą zoptymalizować działanie usługi. Warto poznać parę przydatnych ustawień, które potencjalnie można przetestować w swoich aplikacjach.</p>\n<h3 id=\"czym-są-drivery-do-baz-danych\">Czym są drivery do baz danych?</h3>\n<p>Drivery działają z reguły w taki sposób, że zarządzają połączeniami otwieranymi do bazy danych, dostarczając przydatne funkcje i logikę - na przykład ograniczeniem puli połączeń czy eliminacji gorzej działających hostów. Owrapowują całą logikę w przyjazny interfejs api, odciążając programistę od rozumienia internali Takich rzeczy raczej nie opłaca się implementować samemu od zera, ale nie oznacza to że jest to niewykonalne. Są różne drivery i można nawet do nich kontrybuować, bo w większości przypadków są open-source.</p>\n<h3 id=\"clustersettings\">ClusterSettings</h3>\n<p>Klaster to grupa hostów mongo, które udostępniają razem pewien zbiór danych, składa się z shardów (opcjonalnie), config serverów i replica setów. Ustawienia dotyczące klastra można skonfigurować za pomocą klasy <code>ClusterSettings</code>, która zawiera takie modyfikowalne elementy jak lista hostów, do których chcemy się łączyć, nazwa replicasetu, różne polityki wybierania hostów, którego wykorzystamy do wysłania zapytania do bazy.</p>\n<h3 id=\"localthreshold\">localThreshold</h3>\n<p>Umożliwia sterownikowi wybrać hosty, które mają najszybszy czas odpowiedzi i są na maszynach fizycznych w najbliższej możliwej lokalizacji - na przykład w ramach jednego datacenter. Parametr <code>localTreshold</code> to próg czasu, który zaczyna być odliczany od momentu uzyskania najszybszej odpowiedzi z serwera mongo. Wszystkie hosty, które odpowiedzą w zadanym okresie (ping najszybszego serwera + czas local threshold) zostaną zakwalifikowane do wykonywania żądań do bazy. Najlepiej obrazuje to rysunek:</p>\n<p><img src=\"/images/posts/cluster-settings-mongo/local-threshold.png\" alt=\"Wizualizacja Local Threshold\" title=\"Wizualizacja Local Threshold\"></p>\n<p>Przykładowo: istnieją 3 serwery mongod, które odpowiadają w czasie <code>5ms</code>, <code>9ms</code> i <code>27ms</code>. Ustawiono na sterowniku <code>localThreshold=20ms</code>. Jako że najszybszy czas odpowiedzi to 5ms, a jeszcze do niego należy doliczyć zdefiniowany threshold czyli <code>20ms</code>, to łącznie maksymalny czas odpowiedzi wyniesie <code>25ms</code>. Serwer odpowiadający w czasie 9ms zakwalifikuje się do serwowania danych, natomiast serwer któremu odpowiedź zajęła <code>27ms</code> zostaje odrzucony - ponieważ akceptowano czas maksymalny <code>25ms</code>. </p>\n<p>Jeśli zostanie utracona łączność z serwerem, który wcześniej odpowiadał w <code>5ms</code>, a zostaną nam dwa serwery z <code>9ms</code> i <code>27ms</code>, to wybierzemy oba, ponieważ local threshold się przesunął (<code>9ms + 20ms = 29ms</code>).</p>\n<p>Na dopasowanie tego parametru nie ma uniwersalnego wzoru i trzeba go skonfigurować zgodnie z realnymi czasami z własnych dc, przydatne mogą być w tym celu metryki czasów odpowiedzi. Raczej nie ma większego powodu, by w normalnym trybie działania aplikacji odpytywać nie-lokalne datacenter, a sam <code>localThreshold</code> jest na tyle elastyczny, że może się przesuwać podczas awarii jednej serwerowni i nie odetnie usługi od bazy danych tylko przekieruje do innego datacenter. </p>\n<p>Domyślnie wartość ta przyjmuje <code>15ms</code> w sterowniku javowym, więc raczej nie ma co się niepokoić że aktualnie ruch krąży między dc - chyba że datacenters mają bardzo szybkie czasy odpowiedzi między sobą.</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoClient</span><span style=\"color: #FFFFFF\"> mongoClient </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">MongoClients</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">create(</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #569CD6\">MongoClientSettings</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">builder()</span>\n<span style=\"color: #FFFFFF\">                        .applyToClusterSettings(builder </span><span style=\"color: #D4D4D4\">-&gt;</span>\n<span style=\"color: #FFFFFF\">                                builder</span>\n<span style=\"color: #FFFFFF\">                                        .hosts(</span><span style=\"color: #569CD6\">Collections</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">singletonList(</span><span style=\"color: #569CD6\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">ServerAddress</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #CE9178\">\"mongos.somedomain.local\"</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #B5CEA8\">27017</span><span style=\"color: #FFFFFF\">)))</span>\n<span style=\"color: #FFFFFF\">                                        .localThreshold(</span><span style=\"color: #B5CEA8\">50</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #569CD6\">TimeUnit</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">MILLISECONDS)</span>\n<span style=\"color: #FFFFFF\">                        )</span>\n<span style=\"color: #FFFFFF\">                        .build())</span></code></pre>\n<h3 id=\"serverselectiontimeout\">serverSelectionTimeout</h3>\n<p>Podobnie jak localThreshold, umożliwia sterownikowi odseparowanie hostów z najgorszymi czasami odpowiedzi. Tym razem to jest maksymalny czas, po którym przestaniemy uwzględniać tego hosta. Może być przydatny w momencie, gdy wszystkie hosty będą przeciążone i nie warto już dociążać ich bardziej.</p>\n<p>Przykładowo, wszystkie hosty są obciążone i mają ping <code>470ms</code>, <code>490ms</code>, <code>550ms</code>. Przy <code>serverSelectionTimeout=500ms</code> odrzucimy hosta który odpowiedział sumarycznie w czasie <code>550ms</code>.</p>\n<p>Domyślnie przyjmuje wartość <code>30s</code>.</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoClient</span><span style=\"color: #FFFFFF\"> mongoClient </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">MongoClients</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">create(</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #569CD6\">MongoClientSettings</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">builder()</span>\n<span style=\"color: #FFFFFF\">                        .applyToClusterSettings(builder </span><span style=\"color: #D4D4D4\">-&gt;</span>\n<span style=\"color: #FFFFFF\">                                builder</span>\n<span style=\"color: #FFFFFF\">                                        .hosts(</span><span style=\"color: #569CD6\">Collections</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">singletonList(</span><span style=\"color: #569CD6\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">ServerAddress</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #CE9178\">\"mongos.somedomain.local\"</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #B5CEA8\">27017</span><span style=\"color: #FFFFFF\">)))</span>\n<span style=\"color: #FFFFFF\">                              .serverSelectionTimeout(</span><span style=\"color: #B5CEA8\">500</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #569CD6\">TimeUnit</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">MILLISECONDS)</span>\n<span style=\"color: #FFFFFF\">                        )</span>\n<span style=\"color: #FFFFFF\">                        .build());</span></code></pre>\n<h3 id=\"requiredreplicasetname\">requiredReplicaSetName</h3>\n<p>Nazwa replicasetu, z którym aplikacja ma się połączyć. Przydatne, jeśli istnieje wiele replicasetów na jednym klastrze. </p>\n<h3 id=\"clusterlistener\">clusterListener</h3>\n<p>Listener, dzięki któremu można nasłuchiwać na zdarzenia związane z klastrem - połączenie, zmianę, zamknięcie połączenia. Przydatne przy zbieraniu metryk, debugowaniu, integracjach z bibliotekami. Aby to wykorzystać, należy zaimplementować metody w interfejsie ClusterListener (jawnie lub zaimplementować jako nową klasę).</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">MongoClient</span><span style=\"color: #FFFFFF\"> mongoClient </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">MongoClients</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">create(</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #569CD6\">MongoClientSettings</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">builder()</span>\n<span style=\"color: #FFFFFF\">                        .applyToClusterSettings(builder </span><span style=\"color: #D4D4D4\">-&gt;</span>\n<span style=\"color: #FFFFFF\">                                builder</span>\n<span style=\"color: #FFFFFF\">                                        .hosts(</span><span style=\"color: #569CD6\">Collections</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">singletonList(</span><span style=\"color: #569CD6\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">ServerAddress</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #CE9178\">\"mongos.somedomain.local\"</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #B5CEA8\">27017</span><span style=\"color: #FFFFFF\">)))</span>\n<span style=\"color: #FFFFFF\">                                        .addClusterListener(</span><span style=\"color: #569CD6\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">ClusterListener</span><span style=\"color: #FFFFFF\">() {</span>\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">@Override</span>\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">void</span><span style=\"color: #FFFFFF\"> clusterOpening(</span><span style=\"color: #569CD6\">ClusterOpeningEvent</span><span style=\"color: #FFFFFF\"> event) {</span>\n<span style=\"color: #FFFFFF\">                                                logger</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">info(</span><span style=\"color: #CE9178\">\"Successfully connected to cluster with id: {}\"</span><span style=\"color: #FFFFFF\">, event</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">getClusterId());</span>\n<span style=\"color: #FFFFFF\">                                                registerMetrics(event);</span>\n<span style=\"color: #FFFFFF\">                                                sendSomeInfoSomewhere();</span>\n<span style=\"color: #FFFFFF\">                                                doSomething();</span>\n<span style=\"color: #FFFFFF\">                                            }</span>\n\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">@Override</span>\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">void</span><span style=\"color: #FFFFFF\"> clusterClosed(</span><span style=\"color: #569CD6\">ClusterClosedEvent</span><span style=\"color: #FFFFFF\"> event) {</span>\n<span style=\"color: #FFFFFF\">                                                logger</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">info(</span><span style=\"color: #CE9178\">\"Connection to cluster closed with id: {}\"</span><span style=\"color: #FFFFFF\">, event</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">getClusterId());</span>\n<span style=\"color: #FFFFFF\">                                                sendSomeInfoSomewhere();</span>\n<span style=\"color: #FFFFFF\">                                            }</span>\n\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">@Override</span>\n<span style=\"color: #FFFFFF\">                                            </span><span style=\"color: #569CD6\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">void</span><span style=\"color: #FFFFFF\"> clusterDescriptionChanged(</span><span style=\"color: #569CD6\">ClusterDescriptionChangedEvent</span><span style=\"color: #FFFFFF\"> event) {</span>\n<span style=\"color: #FFFFFF\">                                                logger</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">info(</span><span style=\"color: #CE9178\">\"Cluster description changed with id: {}\"</span><span style=\"color: #FFFFFF\">, event</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #FFFFFF\">getClusterId());</span>\n<span style=\"color: #FFFFFF\">                                                doSomething();</span>\n<span style=\"color: #FFFFFF\">                                            }</span>\n<span style=\"color: #FFFFFF\">                                        })</span>\n<span style=\"color: #FFFFFF\">                        )</span></code></pre>\n<h3 id=\"dokumentacja-mongodb\">Dokumentacja MongoDB</h3>\n<p>Zachęcam do skorzystania z <a href=\"http://mongodb.github.io/mongo-java-driver/4.3/apidocs/mongodb-driver-core/com/mongodb/connection/ClusterSettings.Builder.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dokumentacji mongo-java-drivera dla ClusterSettings</a>. Można tu znaleźć wiele przydatnych informacji na temat tych i innych parametrów. O parametrach można przeczytać również w <a href=\"https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst#localthresholdms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">oficjalnych wytycznych</a>_.</p>\n<p>To kilka przydatnych wartości, które warto znać i świadomie wykorzystywać. </p>\n","excerpt":"Powszechnie wykorzystywane klienty do łączenia się z bazą danych dostarczają wiele funkcjonalności i możliwości konfiguracji, które można przeoczyć - a są bardzo przydatne i mogą zoptymalizować","description":"Powszechnie wykorzystywane klienty do łączenia się z bazą danych dostarczają wiele przydatnych funkcjonalności i możliwości konfiguracji. Warto poznać parę ustawień, które potencjalnie mogą usprawnić pracę Twoich aplikacji.","path":"/konfiguracja-cluster-settings-w-mongo-db-java-driver/","cover":"/images/posts/cluster-settings-mongo/adjusting.jpg","tags":[{"id":"mongodb","title":"mongodb","path":"/tag/mongodb/"},{"id":"java","title":"java","path":"/tag/java/"},{"id":"database","title":"database","path":"/tag/database/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}},{"node":{"id":"8fa5a7196f6a5cf6e3f3573332ce17ab","title":"Elasticsearch - to nie tylko logi.","timeToRead":5,"datetime":"2020-09-07 22:56:24","content":"<p>Elasticsearch to zaawansowany silnik wyszukiwań a jednocześnie baza danych pozwalająca na przechowywanie różnych typów danych. Wykorzystywana jest głównie przy komercyjnych wyszukiwarkach oraz przy gromadzeniu logów systemowych. Dzięki Elasticsearch, możesz wykonywać skomplikowane wyszukiwania, filtry i agregacje, a także wykorzystywać słowniki.</p>\n<h3 id=\"wstępne-ustalenia\">Wstępne ustalenia</h3>\n<p>Ogólnie myślę, że sensownie będzie zapisywać działania do plików, dzięki czemu będzie łatwiej zrekonstruować listę kroków. Warto utworzyć tworzyć osobny katalog na czas ćwiczeń. Całość prawdopodobnie złożę jako projekt na githubie, więc będzie dostępny do sklonowania. </p>\n<h3 id=\"przykładowy-use-case\">Przykładowy use case</h3>\n<p>Razem z moim trzyosobowym zespołem w ramach hobbystycznych praktyk rozwijaliśmy mini-platformę do wystawiania ogłoszeń. Jednym z wymagań była wyszukiwarka, dzięki której mozna wyszukiwać produkty: po tytule, slowach kluczowych, kategorii, cenie i lokalizacji. Zdecydowaliśmy się na elasticsearch, ponieważ wspiera wyszukiwanie pełnotekstowe i geograficzne.</p>\n<p><img src=\"/images/posts/elasticsearch-zapytania/searching.jpg\"></p>\n<h3 id=\"setup\">Setup</h3>\n<p>Na potrzeby zabawy postawimy sobie 2 kontenery dockerowe z elasticem + kibaną. Zdefiniowaliśmy:</p>\n<ul>\n<li>1 kontener z elasticsearch w wersji 7.8.0</li>\n<li>1 kontener z kibaną w wersji 7.6.0</li>\n<li>2 woluminy, na których będą przechowywane dane</li>\n<li>sieć o nazwie elastic-network</li>\n</ul>\n<p>Wersje nie są najnowsze, ale akurat miałam te obrazy lokalnie na komputerze. Można w razie czego zmienić na nowszą.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">version</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">'2.2'</span>\n<span style=\"color: #569CD6\">services</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">es01</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">image</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">docker.elastic.co/elasticsearch/elasticsearch:7.8.0</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">environment</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">bootstrap.memory_lock=true</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">discovery.type=single-node</span>\n<span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">volumes</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">data01:/usr/share/elasticsearch/data</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">ports</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">9200:9200</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">networks</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">elastic-network</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">kibana01</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">image</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">docker.elastic.co/kibana/kibana:7.6.0</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">container_name</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">kib01</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">ports</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">5601:5601</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">environment</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     </span><span style=\"color: #569CD6\">ELASTICSEARCH_URL</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">http://es01:9200</span>\n<span style=\"color: #FFFFFF\">     </span><span style=\"color: #569CD6\">ELASTICSEARCH_HOSTS</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">http://es01:9200</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">depends_on</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">es01</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">networks</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">     - </span><span style=\"color: #CE9178\">elastic-network</span>\n<span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #569CD6\">volumes</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">data01</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">driver</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">local</span>\n<span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #569CD6\">networks</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">elastic-network</span><span style=\"color: #FFFFFF\">:</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #569CD6\">driver</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">bridge</span></code></pre>\n<p>Przeklejamy powyższy plik do docker-compose.yml i zapisujemy. Posiadamy już deklaratywny plik, na podstawie którego docker-compose utworzy wszystko za nas.\nWykonujemy polecenie (dla osób z słabszym internetem - może trochę potrwać, bo pobierają się obrazy):</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">docker-compose up</span></code></pre>\n<p>Sprawdzamy czy wszystko działa:</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">docker ps</span></code></pre>\n<p>Powinny się nam pojawić 2 działajace kontenery. Jeśli tak, to fajnie. :)</p>\n<h3 id=\"model-danych\">Model danych</h3>\n<p>Zanim cokolwiek ciekawego zaczniemy robić, musimy zamodelować nasze dane. </p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">    </span><span style=\"color: #CE9178\">\"title\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"text\"</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #CE9178\">\"description\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"text\"</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #CE9178\">\"location\":\"geo_point\"</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #CE9178\">\"price\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"double\"</span></code></pre>\n<p>Idziemy w maksymalne uproszczenie schematu. Myślę, że model jest dość czytelny. Id zostanie dodane automatycznie. Mamy title i description o typie text, location jest punktem (x,y), który można osadzić na mapie, price to cena - double. Tyle na teraz wystarczy.</p>\n<h3 id=\"mappingi--typy\">Mappingi &#x26; Typy</h3>\n<p>W Elasticu nasz “scheme” definiujemy za pomocą mappingów. Określamy w nich strukturę dokumentów (np offer ). W mappingach można również zawrzeć w nich dodatkowe techniczne ustawienia - ilość replik, timeouty. Dawniej w jednym indexie mozna było przechowywać wiele typów, co powodowało czasem dziwne błędy. Jednak w najnowszych wersjach elastica, jest jeden “typ” per index. Da się to ominąć, znajdziesz to w <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html#_custom_type_field.\" title=\"dokumentacji\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dokumentacji</a>.</p>\n<p>Zapisujemy poniższą składnię w pliku offer_mapping.json. Umożliwi to nam stworzenie indeksu. Wykorzystamy go za chwile. </p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"mappings\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"properties\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">                  </span><span style=\"color: #D4D4D4\">\"type\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"text\"</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">                   </span><span style=\"color: #D4D4D4\">\"type\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"text\"</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">                   </span><span style=\"color: #D4D4D4\">\"type\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"geo_point\"</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">                   </span><span style=\"color: #D4D4D4\">\"type\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"double\"</span>\n<span style=\"color: #FFFFFF\">               }</span>\n<span style=\"color: #FFFFFF\">      }</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Wykonujemy komendę, tworząc tym samym nowy index.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">curl -H </span><span style=\"color: #CE9178\">\"Content-Type: application/json\"</span><span style=\"color: #FFFFFF\"> -X PUT http://localhost:3000/offers --data </span><span style=\"color: #CE9178\">\"@offer_schema.json\"</span></code></pre>\n<p>W dalszej części do wykonywania requestów będę już używać devtoolsów w kibanie, bo będzie czytelniej. Jeśli nie chcesz tego używać i wolisz CLI, z łatwością wykonasz requesty np. curlem, jak powyżej.</p>\n<h4 id=\"kibana-devtools\">Kibana Devtools</h4>\n<p><img src=\"/images/posts/elasticsearch-zapytania/elasticsearch-1.png\" alt=\"Tak wyglądają devtoolsy\" title=\"Tak wyglądają devtoolsy\"></p>\n<h3 id=\"feedowanie-danych\">Feedowanie danych</h3>\n<p>Poniżej mini-zbiór danych do sprawdzenia, jak to działa.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">POST offers/_doc</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">              </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"skarpety rozmiar 36\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">              </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"kolorowe skarpetki w kropki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">              </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\">:  {</span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">40</span><span style=\"color: #FFFFFF\">, </span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-70</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">              </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #B5CEA8\">10.00</span>\n<span style=\"color: #FFFFFF\">}</span>\n\n<span style=\"color: #FFFFFF\">POST offers/_doc</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"szelki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"szelki w kolorze czarnym, rozmiar XS\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\">:  {</span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">50</span><span style=\"color: #FFFFFF\">, </span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-40</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #B5CEA8\">14.00</span>\n\n<span style=\"color: #FFFFFF\">}</span>\n\n<span style=\"color: #FFFFFF\">POST offers/_doc</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"muszka\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"czerwona, męska\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\">:  {</span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">50</span><span style=\"color: #FFFFFF\">, </span>\n<span style=\"color: #FFFFFF\">                 </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-30</span>\n<span style=\"color: #FFFFFF\">               },</span>\n<span style=\"color: #FFFFFF\">               </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #B5CEA8\">130.00</span>\n\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<h3 id=\"scenariusze-z-życia-wzięte\">Scenariusze z życia wzięte:</h3>\n<h4 id=\"użytkownik-wyszukuje-pełnotekstowo-po-tytule-oferty\">Użytkownik wyszukuje pełnotekstowo po tytule oferty:</h4>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">GET offers/_search</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"query\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"match\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\">: </span><span style=\"color: #CE9178\">\"skarpetki\"</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Odpowiedź z serwera, widzimy znaleziony rekord, ponieważ w tytule zawarte jest słowo \"skarpetki\":</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"took\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"timed_out\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #569CD6\">false</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"_shards\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"successful\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"skipped\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"failed\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span>\n<span style=\"color: #FFFFFF\">  },</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"value\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"relation\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"eq\"</span>\n<span style=\"color: #FFFFFF\">    },</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"max_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0.7389809</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : [</span>\n<span style=\"color: #FFFFFF\">      {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_index\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"offers\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_type\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"_doc\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_id\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"QiyNanQB6SAY5Ir04SbI\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0.7389809</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_source\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"skarpety rozmiar 36\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"kolorowe skarpetki w kropki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">40</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-70</span>\n<span style=\"color: #FFFFFF\">          },</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">10.0</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">      }</span>\n<span style=\"color: #FFFFFF\">    ]</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<h4 id=\"użytkownik-w-filtrach-wybiera-zakres-cenowy\">Użytkownik w filtrach wybiera zakres cenowy</h4>\n<p>Ustalamy:</p>\n<ul>\n<li>gte (greater than or equal) - większe lub równe 10, </li>\n<li>lte (lower than or equal) - mniejsze lub równe 20</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">GET offers/_search</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"query\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"range\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #D4D4D4\">\"gte\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">10</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #D4D4D4\">\"lte\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">20</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #D4D4D4\">\"boost\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">2.0</span>\n<span style=\"color: #FFFFFF\">            }</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Znalezione 2 oferty, z ceną większą niż 10 ale mniejszą niż 20.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"took\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"timed_out\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #569CD6\">false</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"_shards\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"successful\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"skipped\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"failed\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span>\n<span style=\"color: #FFFFFF\">  },</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"value\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">2</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"relation\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"eq\"</span>\n<span style=\"color: #FFFFFF\">    },</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"max_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">2.0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : [</span>\n<span style=\"color: #FFFFFF\">      {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_index\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"offers\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_type\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"_doc\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_id\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"QiyNanQB6SAY5Ir04SbI\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">2.0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_source\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"skarpety rozmiar 36\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"kolorowe skarpetki w kropki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">40</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-70</span>\n<span style=\"color: #FFFFFF\">          },</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">10.0</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">      },</span>\n<span style=\"color: #FFFFFF\">      {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_index\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"offers\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_type\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"_doc\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_id\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"RCyNanQB6SAY5Ir07CYY\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">2.0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_source\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"szelki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"szelki w kolorze czarnym, rozmiar XS\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">50</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-40</span>\n<span style=\"color: #FFFFFF\">          },</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">14.0</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">      }</span>\n<span style=\"color: #FFFFFF\">    ]</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<h4 id=\"szukanie-po-lokalizacji\">Szukanie po lokalizacji:</h4>\n<p>Chcemy znaleźć oferty w promieniu 100km od miejscowości o współrzędnych [-70.001, 40.002]</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">GET offers/_search</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"query\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"bool\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"must\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #D4D4D4\">\"match_all\"</span><span style=\"color: #FFFFFF\"> : {}</span>\n<span style=\"color: #FFFFFF\">            },</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"filter\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">                </span><span style=\"color: #D4D4D4\">\"geo_distance\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">                    </span><span style=\"color: #D4D4D4\">\"distance\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"100km\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">                    </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : [</span><span style=\"color: #B5CEA8\">-70.001</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #B5CEA8\">40.002</span><span style=\"color: #FFFFFF\">]</span>\n<span style=\"color: #FFFFFF\">                }</span>\n<span style=\"color: #FFFFFF\">            }</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Odpowiedź z serwera:</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"took\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"timed_out\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #569CD6\">false</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"_shards\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"successful\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"skipped\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"failed\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span>\n<span style=\"color: #FFFFFF\">  },</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"value\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"relation\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"eq\"</span>\n<span style=\"color: #FFFFFF\">    },</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"max_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1.0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : [</span>\n<span style=\"color: #FFFFFF\">      {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_index\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"offers\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_type\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"_doc\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_id\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"-SyVanQB6SAY5Ir0BSZs\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1.0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_source\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"skarpety rozmiar 36\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"kolorowe skarpetki w kropki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">40</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-70</span>\n<span style=\"color: #FFFFFF\">          },</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">10.0</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">      }</span>\n<span style=\"color: #FFFFFF\">    ]</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Znalazło 1 rekord o współrzędnych [-70, 40].</p>\n<h4 id=\"wyszukiwanie-również-w-opisie\">Wyszukiwanie również w opisie</h4>\n<p>Mamy 1 rekord, który w tytule ma \"skarpety\" a w opisie \"skarpetki\". Chcemy go wyszukać po opisie. Ogólnie da się skonfigurować, żeby wyszukiwało pochodne słowa od skarpety, ale to może w innym poście :)</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">GET offers/_search</span>\n<span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"query\"</span><span style=\"color: #FFFFFF\">: {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"multi_match\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"query\"</span><span style=\"color: #FFFFFF\">:    </span><span style=\"color: #CE9178\">\"skarpetki\"</span><span style=\"color: #FFFFFF\">, </span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"fields\"</span><span style=\"color: #FFFFFF\">: [ </span><span style=\"color: #CE9178\">\"title\"</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #CE9178\">\"description\"</span><span style=\"color: #FFFFFF\"> ] </span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>No i mamy znalezione skarpetki.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #FFFFFF\">{</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"took\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"timed_out\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #569CD6\">false</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"_shards\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"successful\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"skipped\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"failed\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0</span>\n<span style=\"color: #FFFFFF\">  },</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"total\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"value\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #D4D4D4\">\"relation\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"eq\"</span>\n<span style=\"color: #FFFFFF\">    },</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"max_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0.9808291</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">\"hits\"</span><span style=\"color: #FFFFFF\"> : [</span>\n<span style=\"color: #FFFFFF\">      {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_index\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"offers\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_type\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"_doc\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_id\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"-SyVanQB6SAY5Ir0BSZs\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_score\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">0.9808291</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #D4D4D4\">\"_source\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"title\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"skarpety rozmiar 36\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"description\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #CE9178\">\"kolorowe skarpetki w kropki\"</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"location\"</span><span style=\"color: #FFFFFF\"> : {</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lat\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">40</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">            </span><span style=\"color: #D4D4D4\">\"lon\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">-70</span>\n<span style=\"color: #FFFFFF\">          },</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #D4D4D4\">\"price\"</span><span style=\"color: #FFFFFF\"> : </span><span style=\"color: #B5CEA8\">10.0</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">      }</span>\n<span style=\"color: #FFFFFF\">    ]</span>\n<span style=\"color: #FFFFFF\">  }</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>To tyle na dziś. Jako czytelnik różnych blogów lubię, gdy jest dużo przykładów, więc też w takiej formie postanowiłam stworzyć wpis. Będę testować, czy przyjemniej mi się tak pisze.</p>\n","excerpt":"Elasticsearch to zaawansowany silnik wyszukiwań a jednocześnie baza danych pozwalająca na przechowywanie różnych typów danych. Wykorzystywana jest głównie przy komercyjnych wyszukiwarkach oraz przy","description":"Elasticsearch to zaawansowany silnik wyszukiwań a jednocześnie baza danych pozwalająca na przechowywanie różnych typów danych. Wykorzystywana jest głównie przy komercyjnych wyszukiwarkach oraz przy gromadzeniu logów systemowych. Dzięki Elasticsearch, możesz wykonywać skomplikowane wyszukiwania, filtry i agregacje, a także wykorzystywać słowniki.","path":"/elasticsearch-to-nie-tylko-logi/","cover":"/images/posts/elasticsearch-zapytania/searching.jpg","tags":[{"id":"elk","title":"elk","path":"/tag/elk/"},{"id":"elasticsearch","title":"elasticsearch","path":"/tag/elasticsearch/"},{"id":"inżynieria","title":"inżynieria","path":"/tag/in%C5%BCynieria/"},{"id":"database","title":"database","path":"/tag/database/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}},{"node":{"id":"888e79f6459f76d95ede4741ee5f58ca","title":"Prawo Demeter - zasada ograniczenia interakcji","timeToRead":2,"datetime":"2020-04-30 15:56:24","content":"<p>Przy projektowaniu obiektowym możemy się zastanowić, w jaki sposób uprościć relacje między naszymi obiektami, tak aby zmiana w jednej klasie nie propagowała konieczności zmian w wielu innych.\nZ pomocą przychodzi nam <a href=\"https://pl.wikipedia.org/wiki/Prawo_Demeter\" title=\"**prawo Demeter** \" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>prawo Demeter,</strong> </a>, które w skrócie ogranicza nas do interakcji jedynie z najbliższymi sąsiednimi obiektami. Dzięki temu, nasz obiekt jest zależny tylko od swoich sąsiadów. Kiedy implementacja sąsiada naszego sąsiada się zmieni - nie interesuje nas to. Jest to tak zwany luźny związek (<em>ang. loose coupling</em>).\nNie łamiemy w ten sposób zasady enkapsulacji obiektu i nie tworzymy dużej ilości powodów, dla których mielibyśmy modyfikować naszą klasę. W ten sposób możemy sprawić, że nasz projekt jest zgodny z zasadami <a href=\"https://pl.wikipedia.org/wiki/SOLID_(programowanie_obiektowe)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SOLID</a>.\nPoniżej, na przykładzie logiki aplikacji quizowej, możemy przeanalizować przypadek <strong>tight coupled</strong> (1) i<strong> loose coupled</strong> (2). </p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #7CA668\">//// przykład tight coupling (1)</span>\n<span style=\"color: #569CD6\">class</span><span style=\"color: #FFFFFF\"> QuizWhichBreaksLawOfDemeter {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #FFFFFF\"> questions</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> Question[]</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #7CA668\">// ...</span>\n<span style=\"color: #FFFFFF\">    isAnswerCorrect(question</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> Question) {</span>\n<span style=\"color: #FFFFFF\">     </span><span style=\"color: #7CA668\">// poniżej łamiemy Prawo Demeter</span>\n<span style=\"color: #FFFFFF\">     </span><span style=\"color: #7CA668\">// wnikając w implementację answer</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> question.getAnswer().getId() </span><span style=\"color: #D4D4D4\">==</span><span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">      question.getUserAnswer().getId()</span>\n<span style=\"color: #FFFFFF\">    } </span>\n<span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">    countCorrectAnswers()</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> number {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.questions</span>\n<span style=\"color: #FFFFFF\">        .filter(q </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.isAnswerCorrect(q))</span>\n<span style=\"color: #FFFFFF\">        .length</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">  } </span>\n\n<span style=\"color: #7CA668\">// anemiczna klasa question, nic prócz getterów i setterów</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #FFFFFF\"> Question {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #FFFFFF\"> answer</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #FFFFFF\"> userAnswer</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #7CA668\">// ...</span>\n<span style=\"color: #FFFFFF\">    getUserAnswer()</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.userAnswer</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">    getAnswer()</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.answer</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">  } </span></code></pre>\n<p>W powyższym przykładzie z poziomu quizu dostajemy się do wnętrza answer, który nie jest naszym bezpośrednim sąsiadem (quiz &#x3C;-> question &#x3C;-> answer). Metoda <code>isAnswerCorrect()</code> wywołuje łańcuch <code>question.getUserAnswer().getId()</code>, dostając się głęboko do struktury, której szczegółów implementacyjnych nie powinniśmy znać. Łamiemy Prawo Demeter. </p>\n<p>Zastanówmy się, jak możemy rozwiązać ten problem. Musimy ograniczyć splątanie naszych klas i ich wspólną zależność od siebie.\nPoniżej przykład, który jest nieco lepszy. Metoda <code>isAnswerCorrect()</code> została przeniesiona z klasy Quiz, do klasy Question. Manipuluje ona już swoimi własnymi sąsiadami, wystawiając Quizowi tylko metodę do sprawdzenia ( <code>isAnswerCorrect()</code> ).</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #7CA668\">// przykład loose coupling (2)</span>\n<span style=\"color: #569CD6\">class</span><span style=\"color: #FFFFFF\"> QuizLooseCoupled {</span>\n<span style=\"color: #FFFFFF\">    questions</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> Question[]</span>\n<span style=\"color: #FFFFFF\">\t</span><span style=\"color: #7CA668\">// nie interesuje nas jak jest sprawdzana odpowiedź</span>\n<span style=\"color: #FFFFFF\">\t</span><span style=\"color: #7CA668\">// po prostu wywołujemy metodę naszego sąsiedniego obiektu</span>\n<span style=\"color: #FFFFFF\">     countCorrectAnswers()</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> number {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.questions</span>\n<span style=\"color: #FFFFFF\">        .filter(q </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #FFFFFF\"> q.isAnswerCorrect())</span>\n<span style=\"color: #FFFFFF\">        .length</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">  }</span>\n\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #569CD6\">class</span><span style=\"color: #FFFFFF\"> Question {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #7CA668\">// ...</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #FFFFFF\"> answer</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #FFFFFF\"> userAnswer</span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> QuizOption</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #7CA668\">// tutaj przeniesiona jest odpowiedzialność funkcji</span>\n<span style=\"color: #FFFFFF\">    isAnswerCorrect() {</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.answer.getId() </span><span style=\"color: #D4D4D4\">===</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">this</span><span style=\"color: #FFFFFF\">.userAnswer.getId()</span>\n<span style=\"color: #FFFFFF\">    } </span>\n<span style=\"color: #FFFFFF\">  } </span></code></pre>\n<p>Podany przykład jest prosty. Popełnienie błędu z pierwszej sekcji nie jest fatalne w skutkach, refaktoryzacja zajmie pół minuty. W przypadku większych aplikacji z wieloma tight coupled obiektami może powstać problem, który poskutkuje efektem domina - naprawiając jeden obiekt, musimy naprawić 2,3,4 następnych…</p>\n<p>Na ile posiadamy czasu, warto zastanowić się nad rozluznieniem wiezi naszych obiektów póki nie ma dramatu - nie żyjemy w starożytnej Grecji, ale Prawo Demeter warto znać :) </p>\n<p>Całość kodu można znaleźć na moim <a href=\"https://github.com/julia-glaszka/law-of-demeter\" title=\"githubie\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">githubie</a>.</p>\n","excerpt":"Przy projektowaniu obiektowym możemy się zastanowić, w jaki sposób uprościć relacje między naszymi obiektami, tak aby zmiana w jednej klasie nie propagowała konieczności zmian w wielu innych. Z","description":"Jak projektować architekturę swojego kodu, aby uniknąć spaghetti code? Co to jest loose coupling i jak jest związany z prawem Demeter? Na przykładzie prostego kodu pokażę, jak można to prosto osiągnąć.","path":"/prawo-demeter-zasada-ograniczenia-interakcji/","cover":"/images/posts/prawo-demeter/cover.jpg","tags":[{"id":"clean code","title":"clean code","path":"/tag/clean%20code/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"TypeScript","title":"TypeScript","path":"/tag/TypeScript/"},{"id":"inżynieria","title":"inżynieria","path":"/tag/in%C5%BCynieria/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}},{"node":{"id":"e8c9d1ee5f11bad9b7871e8cff0f2f63","title":"Wykonywanie kopii obiektów w javascript","timeToRead":4,"datetime":"2020-03-01 14:43:24","content":"<p><strong>Kopiowanie</strong> to mechanizm tworzenia <strong>duplikatów</strong>. W przypadku <strong>prymitywów</strong> (string, number, boolean itd) sprawa jest prosta, możemy spokojnie wykonywać wszystkie operacje bez obaw o nadpisywanie oryginału. </p>\n<p>Sprawa się komplikuje przy zastosowaniu przypisania obiektu za pomocą prostego = - wtedy tworzy się <strong>referencja</strong> do oryginału. Kopia jest zależna od oryginału, więc każda modyfikacja w obiekcie oddziałuje na resztę obiektów. Czasami taki efekt nie jest pożądany, niestety w js brakuje natywnych, prostych sposobów na klonowanie obiektów bez tworzenia referencji (wskaźnika na oryginał), trzeba w tym celu wykorzystywać różne hacki. </p>\n<p>W tym artykule omówię część z nich, mam nadzieję że komuś się przydadzą.</p>\n<h2 id=\"trochę-teorii\">Trochę teorii</h2>\n<p>Istnieją rodzaje kopiowania obiektów w js:</p>\n<ul>\n<li><strong>Brak</strong> - <strong>referencja</strong>, wskazuje na adres obiektu macierzystego. Przy podmianie jakiejkolwiek wartości obiektu, zamieniają się one równocześnie w kopii i oryginale. Kopia jest <strong>silnie zależna</strong> od oryginału.</li>\n<li><strong>Płytkie (shallow)</strong> - otrzymujemy prostą kopię, która posiada <strong>jednopoziomową kopię</strong>, głębsze zagnieżdzenia są <strong>referencją do oryginału</strong> i przy podmianie wartości zmieni się również w innych obiektach.</li>\n<li><strong>Głębokie (deep)</strong> - kopie są <strong>identyczne</strong> i <strong>niezależne</strong> od siebie. Obiekt jest <strong>autonomiczny</strong>, posiada wartości na własność, <strong>nic nie współdzieli</strong> - zmiana w oryginale nie zmodyfikuje kopii.</li>\n</ul>\n<h2 id=\"brak-kopii\">Brak kopii</h2>\n<p>Zacznijmy od tego, w jaki sposób nie skopiujemy obiektu, a który jednak początkowo wydaje się słusznym i prostym rozwiązaniem. Jak widać, przy podmianie wartości w klonie, wartość oryginału również się zmieniła, co nie jest oczekiwanym efektem.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #7CA668\">// proste przypisanie  </span>\n<span style=\"color: #569CD6\">var</span><span style=\"color: #FFFFFF\"> strawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">    color: </span><span style=\"color: #CE9178\">'red'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    taste: </span><span style=\"color: #CE9178\">'sweet'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    size: </span><span style=\"color: #CE9178\">'large'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    shape: {</span>\n<span style=\"color: #FFFFFF\">        x: </span><span style=\"color: #B5CEA8\">10</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        y: </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        z: </span><span style=\"color: #B5CEA8\">33</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">};</span>\n\n<span style=\"color: #569CD6\">var</span><span style=\"color: #FFFFFF\"> someOtherStrawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> strawberry;</span>\n<span style=\"color: #FFFFFF\">someOtherStrawberry.size </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">'small'</span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.size); </span>\n<span style=\"color: #7CA668\">// output: small</span></code></pre>\n<h2 id=\"płytkie-kopie\">Płytkie kopie</h2>\n<p>Część funkcji dostarczonych <strong>natywnie</strong> przez JavaScript umożliwia <strong>płytkie skopiowanie</strong> obiektu. Dopóki zajmujemy się przestrzenią bez zagnieżdżeń, wszystko działa jak powinno. </p>\n<p><strong>Problem</strong> pojawia się, gdy <strong>modyfikujemy zagnieżdżone obiekty</strong> - wtedy nadal możemy <strong>modyfikować oryginał</strong>, co nie jest pożądane (dzięki rekurencyjnemu użyciu płytkich kopii możemy jednak stworzyć głęboką kopię, czym zajmiemy się później). </p>\n<p>Poniżej sposób na płytką kopię: </p>\n<h3 id=\"objectassign\">Object.assign()</h3>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #7CA668\">//Tworzy płytką kopię - klonuje właściwości najwyższego poziomu, pozostawiając referencję do zagnieżdzonych  </span>\n<span style=\"color: #569CD6\">var</span><span style=\"color: #FFFFFF\"> someOtherStrawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> Object.assign({}, strawberry);  </span>\n<span style=\"color: #FFFFFF\">someOtherStrawberry.size </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">'small'</span><span style=\"color: #FFFFFF\">;  </span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.size) </span>\n<span style=\"color: #7CA668\">// output: large  </span>\n\n<span style=\"color: #FFFFFF\">someOtherStrawberry.shape.x </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.shape.x) </span>\n<span style=\"color: #7CA668\">// output: 32, wartość strawberry jest podmieniona przez modyfikacje na someOtherStrawberry!</span></code></pre>\n<h3 id=\"spread-operator-es6\">Spread operator ES6</h3>\n<p>Standard ES6 przynosi nam proste ułatwienia, pozwalające na dokonywanie kopii. Jednym z nich jest <strong>spread operator</strong> <code>...</code>, który <strong>płytko ignoruje</strong> wskaźnik do obiektu <strong>macierzystego</strong>. Dzięki temu otrzymujemy obiekty niezależne.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">var</span><span style=\"color: #FFFFFF\"> strawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">    color: </span><span style=\"color: #CE9178\">'red'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    taste: </span><span style=\"color: #CE9178\">'sweet'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    size: </span><span style=\"color: #CE9178\">'large'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    shape: {</span>\n<span style=\"color: #FFFFFF\">        x: </span><span style=\"color: #B5CEA8\">10</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        y: </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        z: </span><span style=\"color: #B5CEA8\">33</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">};</span>\n<span style=\"color: #569CD6\">const</span><span style=\"color: #FFFFFF\"> someOtherStrawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #D4D4D4\">...</span><span style=\"color: #FFFFFF\">strawberry</span>\n<span style=\"color: #FFFFFF\">};</span>\n<span style=\"color: #FFFFFF\">someOtherStrawberry.size </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">'small'</span><span style=\"color: #FFFFFF\">;</span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.size) </span>\n<span style=\"color: #7CA668\">// output: large, wszystko OK!  </span>\n\n<span style=\"color: #FFFFFF\">someOtherStrawberry.shape.x </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">;</span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.shape.x) </span>\n<span style=\"color: #7CA668\">// output: 32, znowu podmienione przez modyfikacje na someOtherStrawberry :(</span></code></pre>\n<h2 id=\"sposoby-na-głęboką-kopię\">Sposoby na głęboką kopię</h2>\n<h3 id=\"jsonparse-jsonstringify\">JSON.parse(), JSON.stringify()</h3>\n<p>Kiedy tworzymy klona, chcielibyśmy by był całkowicie <strong>niezależny referencyjnie</strong> od oryginału, a jednocześnie był identyczny jak on. Łatwo można to uzyskać za pomocą niezbyt eleganckiej sztuczki z JSONem. Metoda ta działa tylko z <strong>strukturami danych</strong> - obiekt w tym wypadku nie może zawierać funkcji. </p>\n<p>Osobiście <strong>nie stosowałabym</strong> tego sposobu - w przypadku gdy przy wstępnych założeniach obiekt jest zwykłą strukturą danych, a później nieświadomy inny programista dopisze do niego metody, pojawi się nieoczekiwany i problematyczny bug.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">var</span><span style=\"color: #FFFFFF\"> strawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">    color: </span><span style=\"color: #CE9178\">'red'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    taste: </span><span style=\"color: #CE9178\">'sweet'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    size: </span><span style=\"color: #CE9178\">'large'</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">    shape: {</span>\n<span style=\"color: #FFFFFF\">        x: </span><span style=\"color: #B5CEA8\">10</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        y: </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">,</span>\n<span style=\"color: #FFFFFF\">        z: </span><span style=\"color: #B5CEA8\">33</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">};</span>\n<span style=\"color: #569CD6\">const</span><span style=\"color: #FFFFFF\"> someOtherStrawberry </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> JSON.parse(JSON.stringify(strawberry));</span>\n<span style=\"color: #FFFFFF\">someOtherStrawberry.size </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">'small'</span><span style=\"color: #FFFFFF\">;</span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.size) </span>\n<span style=\"color: #7CA668\">// output: large, wszystko OK!  </span>\n\n<span style=\"color: #FFFFFF\">someOtherStrawberry.shape.x </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #B5CEA8\">32</span><span style=\"color: #FFFFFF\">;</span>\n<span style=\"color: #FFFFFF\">console.log(strawberry.shape.x) </span>\n<span style=\"color: #7CA668\">// output: 10, wszystko OK!</span></code></pre>\n<h3 id=\"customowa-funkcja-do-głębokiego-kopiowania\">Customowa funkcja do głębokiego kopiowania</h3>\n<p>Posiadamy już narzędzia do tworzenia płytkich kopii, możemy więc je wykorzystać przy tworzeniu głębokich kopii, wystarczy <strong>rekurencyjnie</strong> przejść po wszystkich <strong>węzłach</strong>. </p>\n<p>Algorytm sprawdza czy przekazana w argumencie wartość - jeśli jest <strong>prymitywem</strong>, po prostu zwraca go. W przypadku, gdy argument jest <strong>obiektem</strong>, przechodzimy po <strong>każdym</strong> jego <strong>polu</strong> i sprawdzamy czy jest ono typem <strong>prymitywnym</strong>, jeśli nie - wywołujemy funkcję \"rozbijającą\" dla pola nie-prymitywnego .</p>\n<p>Wszystko się powtarza do momentu, gdy algorytm przejdzie po całym <strong>drzewie</strong>.</p>\n<pre class=\"shiki\" style=\"background-color: #000000\"><code><span style=\"color: #569CD6\">const</span><span style=\"color: #FFFFFF\"> deepCopyFunc </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> child </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">let</span><span style=\"color: #FFFFFF\"> parent, value, key</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">if</span><span style=\"color: #FFFFFF\"> (</span><span style=\"color: #569CD6\">typeof</span><span style=\"color: #FFFFFF\"> child </span><span style=\"color: #D4D4D4\">!==</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">\"object\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #D4D4D4\">||</span><span style=\"color: #FFFFFF\"> child </span><span style=\"color: #D4D4D4\">===</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">null</span><span style=\"color: #FFFFFF\">) {</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> child </span><span style=\"color: #7CA668\">// zwracamy jeśli jest typem prymitywnym  </span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">    parent </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> Array.isArray(child) </span><span style=\"color: #D4D4D4\">?</span><span style=\"color: #FFFFFF\"> [] </span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #FFFFFF\"> {}</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #7CA668\">//jeśli jest obiektem to iterujemy po każdym property  </span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">for</span><span style=\"color: #FFFFFF\"> (key </span><span style=\"color: #569CD6\">in</span><span style=\"color: #FFFFFF\"> child) {</span>\n<span style=\"color: #FFFFFF\">        value </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> child[key]</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #7CA668\">//jeśli wartość dla key jest obiektem to wykonujemy rekurencyjną kopie  </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #569CD6\">if</span><span style=\"color: #FFFFFF\"> (value </span><span style=\"color: #D4D4D4\">!==</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">null</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #D4D4D4\">&&</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #569CD6\">typeof</span><span style=\"color: #FFFFFF\"> value </span><span style=\"color: #D4D4D4\">===</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #CE9178\">\"object\"</span><span style=\"color: #FFFFFF\">) {</span>\n<span style=\"color: #FFFFFF\">            parent[key] </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> deepCopyFunc(value)</span>\n<span style=\"color: #FFFFFF\">        } </span><span style=\"color: #569CD6\">else</span><span style=\"color: #FFFFFF\"> {</span>\n<span style=\"color: #FFFFFF\">            parent[key] </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> value</span>\n<span style=\"color: #FFFFFF\">        }</span>\n<span style=\"color: #FFFFFF\">    }</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #569CD6\">return</span><span style=\"color: #FFFFFF\"> parent</span>\n<span style=\"color: #FFFFFF\">}</span>\n\n<span style=\"color: #569CD6\">let</span><span style=\"color: #FFFFFF\"> originalArray </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #FFFFFF\"> [</span><span style=\"color: #B5CEA8\">37</span><span style=\"color: #FFFFFF\">, </span><span style=\"color: #B5CEA8\">3700</span><span style=\"color: #FFFFFF\">, {</span>\n<span style=\"color: #FFFFFF\">    hello: </span><span style=\"color: #CE9178\">\"world\"</span>\n<span style=\"color: #FFFFFF\">}]</span></code></pre>\n<p>Myślę, że artykuł okazał się pomocny, a moje objaśnienia niezbyt trudne. Jeśli zauważysz gdzieś błąd, proszę, napisz do mnie. Zależy mi, by mój blog był rzetelnym źródłem informacji, więc z chęcią przyjmuję krytykę.</p>\n","excerpt":"Kopiowanie to mechanizm tworzenia duplikatów. W przypadku prymitywów (string, number, boolean itd) sprawa jest prosta, możemy spokojnie wykonywać wszystkie operacje bez obaw o nadpisywanie oryginału.","description":"W tym poście opisuję metody klonowania obiektów w javascript - w języku, w którym ich zachowanie jest całkiem nietypowe i nieoczekiwane.","path":"/wykonywanie-kopii-obiektow-w-javascript/","cover":"/images/posts/kopie/cover.jpg","tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"inżynieria","title":"inżynieria","path":"/tag/in%C5%BCynieria/"}],"author":{"id":"Julia Glaszka","title":"Julia Glaszka"}}}]}},"context":{}}