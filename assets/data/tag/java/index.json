{"hash":"104e64b551b796adece47e4348221e71124802f9","data":{"tag":{"id":"java","title":"java","path":"/tag/java/","belongsTo":{"totalCount":2,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"507900b37c02db543d8fa26f4705fb1e","title":"Wykorzystaj cały potencjał klastra MongoDB z pomocą preferencji odczytu","datetime":"2021-11-15 18:37:24","path":"/wykorzystaj-caly-potencjal-klastra-mongo-db-z-pomoca-preferencji-odczytu/","content":"<h1 id=\"\"></h1>\n<p>Typowy produkcyjny klaster jest zbudowany z co najmniej jednego ReplicaSetu. To oznacza, że posiadamy co najmniej jeden węzeł Primary (realizujący zapisy i odczyty) i kilka Secondary (tylko do odczytu). Domyślne ustawienia konfiguracji sterowników kierują ruch wyłącznie do Primary, rezygnując z używania pozostałych hostów. To oznacza, że obciążony jest tylko jeden node, a reszta pozostaje bierna - zasoby pod względem load-balancingu są marnowane. W przypadku awarii Mastera tracimy też możliwość odczytów, które mogłyby być nadal realizowane przez Secondary.</p>\n<p>Zatem w jaki sposób można wymusić kierowanie ruchu do innych hostów niż Primary? Z pomocą przychodzą nam preferencje odczytu - tzw. <code>ReadPreference</code>. Posiada on różne tryby, pozwalające na wybranie algorytmu poszukiwania hosta, do którego wyślemy query.</p>\n<h2 id=\"konfiguracja-preferencji-odczytu-w-driverze\">Konfiguracja preferencji odczytu w driverze</h2>\n<p>Ustawienia <code>ReadPreference</code> można zdefiniować w kilku miejscach:</p>\n<ul>\n<li>na poziomie klastra:</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoClient</span><span style=\"color: #D8DEE9FF\"> mongoClient </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MongoClients</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">MongoClientSettings</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">builder</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\">  </span>\n<span style=\"color: #D8DEE9FF\">.</span><span style=\"color: #88C0D0\">hosts</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">listOfHostsUrls</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">.</span><span style=\"color: #88C0D0\">readPreference</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">ReadPreference</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">secondary</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #D8DEE9FF\">  </span>\n<span style=\"color: #D8DEE9FF\">.</span><span style=\"color: #88C0D0\">build</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span></code></pre>\n<ul>\n<li>na poziomie bazy danych</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoDatabase</span><span style=\"color: #D8DEE9FF\"> database </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> mongoClient</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">getDatabase</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">someDatabase</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\">  </span>\n<span style=\"color: #D8DEE9FF\">.</span><span style=\"color: #88C0D0\">withReadPreference</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">ReadPreference</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">secondary</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span></code></pre>\n<ul>\n<li>na poziomie kolekcji</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoCollection&lt;Document&gt;</span><span style=\"color: #D8DEE9FF\"> collection </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> database</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">getCollection</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">videos</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\">  </span>\n<span style=\"color: #D8DEE9FF\">.</span><span style=\"color: #88C0D0\">withReadPreference</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">ReadPreference</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">secondary</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span></code></pre>\n<p>Podane ustawienia mogą zmieniać działanie usługi, jeśli na przykład posiada na klastrze kilka różnych baz danych z różnymi kolekcjami. Może być tak, że nie dla wszystkich kolekcji można sobie pozwolić na odczyt z Secondary - np. gdy potrzebujemy wyższy poziom consistency.</p>\n<h2 id=\"tryby-odczytu\">Tryby odczytu</h2>\n<h3 id=\"primary\">primary</h3>\n<p>Domyślny dla wielu driverów. Kieruje ruch wyłącznie do hosta typu Primary, co może być znaczącą barierą w skalowaniu usługi pod kątem odczytów.</p>\n<h3 id=\"primarypreferred\">primaryPreferred</h3>\n<p>W tej preferencji w głównej mierze odczytujemy z hosta Primary, ale w przypadku gdy będzie niedostępny to odczyty zostaną przekierowana do innych replik typu Secondary.</p>\n<h3 id=\"secondary\">secondary</h3>\n<p>Wszystkie odczyty są kierowane do Secondary.</p>\n<h3 id=\"secondarypreferred\">secondaryPreferred</h3>\n<p>W większości przypadków odczytujemy z Secondary, ale przy awarii wszystkich hostów ruch może zostać przekierowany do Primary.</p>\n<h3 id=\"nearest\">nearest</h3>\n<p>Driver selekcjonuje zdrowe hosty z odpowiednio krótkim czasem odpowiedzi, tak by odpowiedziały maksymalnie szybko - np w ramach jednego datacenter. Następnie losowo wybierany jest jeden host, który zrealizuje żądanie. Nie jest uwzględniane czy node jest Primary czy Secondary.</p>\n<h2 id=\"jaki-tryb-odczytu-wybrać\">Jaki tryb odczytu wybrać?</h2>\n<p>W przypadku usługi typu heavy read z eventual consistency najbardziej optymalne będzie odczytywanie z preferencjami: <code>nearest</code>, <code>secondaryPreferred</code> lub <code>secondary</code>. Wybór konkretnej preferencji zależałby w tym przypadku od ilości zapisów oraz posiadanych hostów i zasobów. Jeśli usługa bardzo dużo zapisuje i Primary jest już dostatecznie obciążony, można rozważyć unikanie dociążania Primary poprzez preferencję <code>secondary</code> lub <code>secondaryPreferred</code>.</p>\n<p>Ostateczny wybór między pozostałymi dwoma typami odczytów może rozstrzygnąć to - czy bardziej zależy nam na stabilności odczytów czy zapisów. SecondaryPreferred dostarcza n+1 hostów, natomiast samo secondary tylko n (bo nie uwzględnia Primary).</p>\n<p>W sytuacji niespodziewanie większego ruchu warto mieć więcej dostępnych hostów niż mniej, ale analizując z drugiej strony - ten jeden dodatkowy host to Primary, jeśli zostanie obciążony to doprowadzi to również do niestabilności zapisów. Jeśli usługa nie posiada mechanizmów ponowień takich jak klienci z ponowieniami lub message queue, to dane mogą zostać niezapisane, co skłaniałoby do użycia preferencji secondary - wtedy awaria dotyczyłaby tylko odczytów.</p>\n<h2 id=\"po-wdrożeniu\">Po wdrożeniu</h2>\n<p>Po wdrożeniu nowego typu preferencji warto mieć wgląd w metryki:</p>\n<ul>\n<li>czasów odpowiedzi usługi</li>\n<li>czasów odpowiedzi bazy danych do usługi</li>\n<li>load, zajętość ramu, ilość rps do kolekcji, obciążenie sieciowe klastra mongo</li>\n</ul>\n<h2 id=\"podsumowanie\">Podsumowanie</h2>\n<p>Jak widać, każde takie ustawienie trzeba samodzielnie przeanalizować, uwzględniając swoje własne wymagania względem stabilności. Wybranie konkretnej preferencji odczytu może mieć dalekosiężne skutki, dlatego przed wyborem zawsze warto się dłużej zastanowić i przeanalizować słabe punkty konkretnego rozwiązania. Polecam również zapoznać się z <a href=\"https://docs.mongodb.com/manual/core/read-preference/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">oficjalną dokumentacją</a>.</p>\n","excerpt":" Typowy produkcyjny klaster jest zbudowany z co najmniej jednego ReplicaSetu. To oznacza, że posiadamy co najmniej jeden węzeł Primary (realizujący zapisy i odczyty) i kilka Secondary (tylko do","description":"Wykorzystaj cały potencjał klastra MongoDB z pomocą preferencji odczytu","cover":"/images/posts/mongodb-read-preferences/route.jpg","timeToRead":3,"author":{"id":"Julia","title":"Julia","path":"/author/Julia/"}}},{"node":{"id":"c854d4a554f3e6aa74a421fac8beb243","title":"Konfiguracja ClusterSettings w MongoDB Java Driver","datetime":"2021-10-07 20:22:24","path":"/konfiguracja-cluster-settings-w-mongo-db-java-driver/","content":"<p>Powszechnie wykorzystywane klienty do łączenia się z bazą danych dostarczają wiele funkcjonalności i możliwości konfiguracji, które można przeoczyć - a są bardzo przydatne i mogą zoptymalizować działanie usługi. Warto poznać parę przydatnych settingsów, które potencjalnie można przetestować.</p>\n<h3 id=\"czym-są-drivery\">Czym są drivery?</h3>\n<p>Drivery działają z reguły w taki sposób, że zarządzają połączeniami otwieranymi do bazy danych, dostarczając przydatne funkcje i logikę - na przykład ograniczeniem puli połączeń czy eliminacji gorzej działających hostów. Owrapowują całą logikę w przyjazny interfejs api, odciążając programistę od rozumienia internali Takich rzeczy raczej nie opłaca się implementować samemu od zera, ale nie oznacza to że jest to niewykonalne. Są różne drivery i można nawet do nich kontrybuować, bo w większości przypadków są open-source.</p>\n<h3 id=\"clustersettings\">ClusterSettings</h3>\n<p>Klaster to grupa hostów mongo, które udostępniają razem pewien zbiór danych, składa się z shardów (opcjonalnie), config serverów i replica setów. Ustawienia dotyczące klastra można skonfigurować za pomocą klasy <code>ClusterSettings</code>, która zawiera takie modyfikowalne elementy jak lista hostów, do których chcemy się łączyć, nazwa replicasetu, różne polityki wybierania hostów, którego wykorzystamy do wysłania zapytania do bazy.</p>\n<h3 id=\"localthreshold\">localThreshold</h3>\n<p>Umożliwia sterownikowi wybrać hosty, które mają najszybszy czas odpowiedzi i są na maszynach fizycznych w najbliższej możliwej lokalizacji - na przykład w ramach jednego datacenter. Parametr <code>localTreshold</code> to próg czasu, który zaczyna być odliczany od momentu uzyskania najszybszej odpowiedzi z serwera mongo. Wszystkie hosty, które odpowiedzą w zadanym okresie (ping najszybszego serwera + czas local threshold) zostaną zakwalifikowane do wykonywania żądań do bazy. Najlepiej obrazuje to rysunek:</p>\n<p><img src=\"/images/posts/cluster-settings-mongo/local-threshold.png\" alt=\"Wizualizacja Local Threshold\" title=\"Wizualizacja Local Threshold\"></p>\n<p>Przykładowo: istnieją 3 serwery mongod, które odpowiadają w czasie <code>5ms</code>, <code>9ms</code> i <code>27ms</code>. Ustawiono na sterowniku <code>localThreshold=20ms</code>. Jako że najszybszy czas odpowiedzi to 5ms, a jeszcze do niego należy doliczyć zdefiniowany threshold czyli <code>20ms</code>, to łącznie maksymalny czas odpowiedzi wyniesie <code>25ms</code>. Serwer odpowiadający w czasie 9ms zakwalifikuje się do serwowania danych, natomiast serwer któremu odpowiedź zajęła <code>27ms</code> zostaje odrzucony - ponieważ akceptowano czas maksymalny <code>25ms</code>. </p>\n<p>Jeśli zostanie utracona łączność z serwerem, który wcześniej odpowiadał w <code>5ms</code>, a zostaną nam dwa serwery z <code>9ms</code> i <code>27ms</code>, to wybierzemy oba, ponieważ local threshold się przesunął (<code>9ms + 20ms = 29ms</code>).</p>\n<p>Na dopasowanie tego parametru nie ma uniwersalnego wzoru i trzeba go skonfigurować zgodnie z realnymi czasami z własnych dc, przydatne mogą być w tym celu metryki czasów odpowiedzi. Raczej nie ma większego powodu, by w normalnym trybie działania aplikacji odpytywać nie-lokalne datacenter, a sam <code>localThreshold</code> jest na tyle elastyczny, że może się przesuwać podczas awarii jednej serwerowni i nie odetnie usługi od bazy danych tylko przekieruje do innego datacenter. </p>\n<p>Domyślnie wartość ta przyjmuje <code>15ms</code> w sterowniku javowym, więc raczej nie ma co się niepokoić że aktualnie ruch krąży między dc - chyba że datacenters mają bardzo szybkie czasy odpowiedzi między sobą.</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoClient</span><span style=\"color: #D8DEE9FF\"> mongoClient </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MongoClients</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #ECEFF4\">(</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #8FBCBB\">MongoClientSettings</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">builder</span><span style=\"color: #ECEFF4\">()</span>\n<span style=\"color: #D8DEE9FF\">                        .</span><span style=\"color: #88C0D0\">applyToClusterSettings</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">builder </span><span style=\"color: #81A1C1\">-&gt;</span>\n<span style=\"color: #D8DEE9FF\">                                builder</span>\n<span style=\"color: #D8DEE9FF\">                                        .</span><span style=\"color: #88C0D0\">hosts</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">Collections</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">singletonList</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ServerAddress</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">mongos.somedomain.local</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">, </span><span style=\"color: #B48EAD\">27017</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">))</span>\n<span style=\"color: #D8DEE9FF\">                                        .</span><span style=\"color: #88C0D0\">localThreshold</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #B48EAD\">50</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">TimeUnit</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #D8DEE9\">MILLISECONDS</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">                        </span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">                        .</span><span style=\"color: #88C0D0\">build</span><span style=\"color: #ECEFF4\">())</span></code></pre>\n<h3 id=\"serverselectiontimeout\">serverSelectionTimeout</h3>\n<p>Podobnie jak localThreshold, umożliwia sterownikowi odseparowanie hostów z najgorszymi czasami odpowiedzi. Tym razem to jest maksymalny czas, po którym przestaniemy uwzględniać tego hosta. Może być przydatny w momencie, gdy wszystkie hosty będą przeciążone i nie warto już dociążać ich bardziej.</p>\n<p>Przykładowo, wszystkie hosty są obciążone i mają ping <code>470ms</code>, <code>490ms</code>, <code>550ms</code>. Przy <code>serverSelectionTimeout=500ms</code> odrzucimy hosta który odpowiedział sumarycznie w czasie <code>550ms</code>.</p>\n<p>Domyślnie przyjmuje wartość <code>30s</code>.</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoClient</span><span style=\"color: #D8DEE9FF\"> mongoClient </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MongoClients</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #ECEFF4\">(</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #8FBCBB\">MongoClientSettings</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">builder</span><span style=\"color: #ECEFF4\">()</span>\n<span style=\"color: #D8DEE9FF\">                        .</span><span style=\"color: #88C0D0\">applyToClusterSettings</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">builder </span><span style=\"color: #81A1C1\">-&gt;</span>\n<span style=\"color: #D8DEE9FF\">                                builder</span>\n<span style=\"color: #D8DEE9FF\">                                        .</span><span style=\"color: #88C0D0\">hosts</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">Collections</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">singletonList</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ServerAddress</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">mongos.somedomain.local</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">, </span><span style=\"color: #B48EAD\">27017</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">))</span>\n<span style=\"color: #D8DEE9FF\">                              .</span><span style=\"color: #88C0D0\">serverSelectionTimeout</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #B48EAD\">500</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">TimeUnit</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #D8DEE9\">MILLISECONDS</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">                        </span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">                        .</span><span style=\"color: #88C0D0\">build</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span></code></pre>\n<h3 id=\"requiredreplicasetname\">requiredReplicaSetName</h3>\n<p>Nazwa replicasetu, z którym aplikacja ma się połączyć. Przydatne, jeśli istnieje wiele replicasetów na jednym klastrze. </p>\n<h3 id=\"clusterlistener\">clusterListener</h3>\n<p>Listener, dzięki któremu można nasłuchiwać na zdarzenia związane z klastrem - połączenie, zmianę, zamknięcie połączenia. Przydatne przy zbieraniu metryk, debugowaniu, integracjach z bibliotekami. Aby to wykorzystać, należy zaimplementować metody w interfejsie ClusterListener (jawnie lub zaimplementować jako nową klasę).</p>\n<p>Przykładowa konfiguracja:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">MongoClient</span><span style=\"color: #D8DEE9FF\"> mongoClient </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MongoClients</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">create</span><span style=\"color: #ECEFF4\">(</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #8FBCBB\">MongoClientSettings</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">builder</span><span style=\"color: #ECEFF4\">()</span>\n<span style=\"color: #D8DEE9FF\">                        .</span><span style=\"color: #88C0D0\">applyToClusterSettings</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">builder </span><span style=\"color: #81A1C1\">-&gt;</span>\n<span style=\"color: #D8DEE9FF\">                                builder</span>\n<span style=\"color: #D8DEE9FF\">                                        .</span><span style=\"color: #88C0D0\">hosts</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">Collections</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">singletonList</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ServerAddress</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">mongos.somedomain.local</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">, </span><span style=\"color: #B48EAD\">27017</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">))</span>\n<span style=\"color: #D8DEE9FF\">                                        .</span><span style=\"color: #88C0D0\">addClusterListener</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ClusterListener</span><span style=\"color: #D8DEE9FF\">() </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #D08770\">@Override</span>\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #81A1C1\">void</span><span style=\"color: #88C0D0\"> clusterOpening(</span><span style=\"color: #8FBCBB\">ClusterOpeningEvent</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #D8DEE9\">event</span><span style=\"color: #88C0D0\">) </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #88C0D0\">                                                logger</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">info</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Successfully connected to cluster with id: {}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #88C0D0\"> event</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">getClusterId</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                                registerMetrics</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #88C0D0\">event</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                                sendSomeInfoSomewhere</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                                doSomething</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                            </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #D08770\">@Override</span>\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #81A1C1\">void</span><span style=\"color: #88C0D0\"> clusterClosed(</span><span style=\"color: #8FBCBB\">ClusterClosedEvent</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #D8DEE9\">event</span><span style=\"color: #88C0D0\">) </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #88C0D0\">                                                logger</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">info</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Connection to cluster closed with id: {}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #88C0D0\"> event</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">getClusterId</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                                sendSomeInfoSomewhere</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                            </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #D08770\">@Override</span>\n<span style=\"color: #D8DEE9FF\">                                            </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #81A1C1\">void</span><span style=\"color: #88C0D0\"> clusterDescriptionChanged(</span><span style=\"color: #8FBCBB\">ClusterDescriptionChangedEvent</span><span style=\"color: #88C0D0\"> </span><span style=\"color: #D8DEE9\">event</span><span style=\"color: #88C0D0\">) </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #88C0D0\">                                                logger</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">info</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Cluster description changed with id: {}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #88C0D0\"> event</span><span style=\"color: #81A1C1\">.</span><span style=\"color: #88C0D0\">getClusterId</span><span style=\"color: #ECEFF4\">())</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                                doSomething</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #88C0D0\">                                            </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">                                        </span><span style=\"color: #ECEFF4\">})</span>\n<span style=\"color: #D8DEE9FF\">                        </span><span style=\"color: #ECEFF4\">)</span></code></pre>\n<h3 id=\"dokumentacja-mongodb\">Dokumentacja MongoDB</h3>\n<p>Zachęcam do skorzystania z <a href=\"http://mongodb.github.io/mongo-java-driver/4.3/apidocs/mongodb-driver-core/com/mongodb/connection/ClusterSettings.Builder.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dokumentacji mongo-java-drivera dla ClusterSettings</a>. Można tu znaleźć wiele przydatnych informacji na temat tych i innych parametrów. O parametrach można przeczytać również w <a href=\"https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst#localthresholdms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">oficjalnych wytycznych</a>_.</p>\n<p>To kilka przydatnych wartości, które warto znać i świadomie wykorzystywać. </p>\n","excerpt":"Powszechnie wykorzystywane klienty do łączenia się z bazą danych dostarczają wiele funkcjonalności i możliwości konfiguracji, które można przeoczyć - a są bardzo przydatne i mogą zoptymalizować","description":"Konfiguracja ClusterSettings w MongoDB Java Driver","cover":"/images/posts/cluster-settings-mongo/local-threshold.png","timeToRead":3,"author":{"id":"Julia","title":"Julia","path":"/author/Julia/"}}}]}}},"context":{}}